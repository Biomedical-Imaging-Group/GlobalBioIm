Search.setIndex({"docnames": ["abstract", "conditionsuse", "contact", "cost", "examples", "global", "gpu", "gui", "index", "infos", "linop", "methodssummary", "nonlinop", "opti", "propertiessummary", "relatedPapers"], "filenames": ["abstract.rst", "conditionsuse.rst", "contact.rst", "cost.rst", "examples.rst", "global.rst", "gpu.rst", "gui.rst", "index.rst", "infos.rst", "linop.rst", "methodssummary.rst", "nonlinop.rst", "opti.rst", "propertiessummary.rst", "relatedPapers.rst"], "titles": ["Abstract Classes", "Conditions of Use", "Contact", "Cost Functions (Cost)", "Examples", "&lt;no title&gt;", "Speedup with GPU", "Graphical User Interface (GUI)", "Welcome to the GlobalBioIm Library Webpage", "Important Information", "Linear Operators (LinOp)", "List of Methods", "Non-Linear Operators", "Optimization Algorithms (Opti)", "List of Properties", "Related Papers"], "terms": {"thi": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15], "section": [0, 3, 7, 9, 10, 11, 12, 13, 14, 15], "describ": [0, 7, 13], "globalbioim": [0, 1, 2, 7, 9, 15], "librari": [0, 1, 2, 6, 7, 9, 15], "It": [0, 3, 7, 8, 9], "provid": [0, 4, 6, 7, 10, 13], "gener": [0, 1, 3, 4, 7, 13, 15], "properti": [0, 8, 9, 13], "everi": [0, 4, 9, 13], "deriv": [0, 3, 9, 10, 11, 12, 13, 14], "base": [0, 1, 3, 9, 10, 12, 13, 15], "matlab": [0, 6, 7, 8, 9, 10, 13], "mixin": [0, 13], "copyabl": [0, 13], "which": [0, 3, 7, 9, 10, 12, 13, 14], "element": [0, 10], "from": [0, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15], "mathrm": [0, 3, 4, 9, 10, 12, 13], "x": [0, 3, 4, 6, 9, 10, 11, 12, 13, 15], "y": [0, 3, 4, 9, 10, 12, 13, 14, 15], "h": [0, 3, 4, 9, 10, 12, 13, 15], "rightarrow": 0, "where": [0, 3, 4, 10, 13], "ar": [0, 1, 3, 4, 7, 9, 10, 11, 12, 13, 14], "either": [0, 1, 9, 13], "mathbb": [0, 3, 10, 14], "r": [0, 3, 10, 13, 14], "n": [0, 3, 10, 11, 12, 13, 14, 15], "c": [0, 3, 4, 9, 10, 13, 15], "paramet": [0, 3, 4, 10, 11, 12, 13], "name": [0, 9, 13, 14], "linear": [0, 3, 4, 8, 9, 13, 15], "oper": [0, 3, 4, 7, 8, 9, 11, 13], "mathbf": [0, 10], "sizein": [0, 3, 9, 10, 14], "dimens": [0, 3, 10], "left": [0, 3, 9, 10, 13], "hand": [0, 9, 13], "side": [0, 9], "vector": [0, 3, 6, 10, 11, 14], "space": [0, 10], "sizeout": [0, 4, 9, 10, 14], "right": [0, 3, 9, 10, 13], "norm": [0, 3, 4, 9, 13, 14, 15], "known": [0, 13], "otherwis": [0, 3, 7, 11, 13], "1": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "isinvert": [0, 9, 14], "true": [0, 3, 4, 9, 10, 13, 14], "method": [0, 3, 8, 10, 12, 13, 14, 15], "applyinverse_": [0, 10, 11, 12], "i": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15], "implement": [0, 3, 6, 8, 9, 10, 11, 13], "isdifferenti": [0, 9, 14], "applyjacobiant_": [0, 11, 12], "memoizeopt": [0, 4, 9, 14], "structur": [0, 3, 9, 10, 14, 15], "boolean": [0, 9, 10, 13, 14], "one": [0, 3, 6, 7, 9, 11, 13, 14, 15], "field": [0, 3, 7, 9, 14, 15], "per": [0, 9, 14], "see": [0, 1, 3, 7, 9, 10, 12, 13], "detail": [0, 1, 8, 13], "below": [0, 7, 9, 13], "doprecomput": [0, 3, 9, 14], "allow": [0, 6, 7, 9, 14], "do": [0, 4, 7, 9, 10, 13, 15], "precomput": [0, 3, 14], "save": [0, 7, 9, 13], "time": [0, 4, 9, 11, 13, 14], "requir": [0, 6, 7, 9, 13], "more": [0, 1, 7, 8, 13], "memori": [0, 6, 9, 13], "note": [0, 3, 4, 9, 10, 11, 13], "memoiz": [0, 3, 14], "option": [0, 1, 3, 6, 7, 13], "store": [0, 3, 9, 13], "result": [0, 1, 4, 9, 10], "an": [0, 3, 4, 7, 9, 10, 11, 13, 14, 15], "ident": [0, 3, 4], "call": [0, 9, 11, 14], "done": [0, 4, 6, 9], "calcul": 0, "avoid": [0, 7], "exampl": [0, 3, 7, 8, 9, 10, 12, 13], "appli": [0, 3, 4, 7, 9, 10, 11, 12, 13, 15], "summari": [0, 3, 10, 12, 13], "comput": [0, 3, 6, 9, 10, 12, 13, 15], "given": [0, 9, 10, 11, 13], "apply_": [0, 3, 9, 10, 11, 12], "applyjacobi": [0, 9, 11], "v": [0, 8, 11, 12, 13, 15], "j": [0, 3, 10, 15], "_": [0, 3, 4, 9, 10, 11, 13], "star": [0, 3], "jacobian": [0, 11], "matrix": [0, 3, 10], "applyinvers": [0, 9, 11], "applic": [0, 9, 13, 14, 15], "makecomposit": [0, 9, 11], "g": [0, 3, 7, 9, 10, 11, 13], "compos": [0, 3, 7, 11], "return": [0, 4, 9, 10, 13], "new": [0, 3, 7, 8, 9, 14], "m": [0, 1, 3, 8, 9, 10, 11, 13, 15], "hg": 0, "makecomposition_": [0, 3, 9, 10, 11], "plu": [0, 11], "overload": [0, 9, 11], "object": [0, 3, 4, 7, 9, 11, 13, 14], "plus_": [0, 9, 10, 11], "minu": [0, 11], "minus_": [0, 9, 11], "mpower": [0, 11], "p": [0, 3, 10, 13, 15], "power": [0, 12], "current": [0, 10, 13], "mpower_": [0, 9, 10, 11], "mtime": [0, 9, 11], "If": [0, 1, 3, 7, 9, 10, 11, 13, 14, 15], "numer": [0, 3, 6, 15], "size": [0, 3, 4, 9, 10, 11, 12, 14], "intanci": 0, "wise": [0, 3], "multipl": [0, 13, 15], "times_": [0, 11], "Not": 0, "construct": 0, "sum": [0, 3, 4, 7, 10, 13], "subtract": 0, "when": [0, 6, 7, 9, 10, 13, 14], "invers": [0, 1, 3, 4, 8, 11, 12, 13, 15], "neq": [0, 13], "multipli": [0, 4, 10, 13], "copyel": [0, 9], "perform": [0, 9, 10, 11, 13], "deep": [0, 15], "copi": [0, 1], "function": [0, 4, 8, 9, 10, 11, 12, 13], "all": [0, 3, 6, 7, 9, 10, 11, 12, 13, 14], "attribut": [0, 3, 9, 10, 12, 13], "parent": [0, 3, 9, 10, 12, 13], "inherit": [0, 3, 9, 10, 11, 12, 13, 14], "also": [0, 3, 4, 6, 7, 8, 9, 10, 12, 13], "applyadjoint": [0, 9, 11], "applyadjoint_": [0, 10, 11], "applyhth": [0, 3, 9, 11], "hx": [0, 3, 4, 9, 10, 13], "applyhht_": [0, 10, 11], "applyhht": [0, 9, 11], "hh": [0, 3, 9], "transpos": [0, 11], "adjoint": [0, 10, 11, 13], "ctranspos": 0, "same": [0, 4, 9], "applyadjointinvers": [0, 11], "applyadjointinverse_": [0, 10, 11], "makehth": [0, 10, 11], "makehth_": [0, 9, 10, 11], "makehht": [0, 11], "its": [0, 4, 7, 9, 13], "makehht_": [0, 9, 10, 11], "applyhth_": [0, 10, 11], "There": 0, "default": [0, 3, 6, 7, 9, 10, 11, 12], "success": [0, 13], "howev": [0, 7, 9, 13], "can": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 14], "reimplement": [0, 3, 9, 10, 11, 12, 13], "exist": [0, 7, 9], "faster": [0, 6], "wai": [0, 9], "summat": [0, 10], "makeadjoint_": [0, 9, 10, 11], "correspond": [0, 3, 9, 10, 14], "makeinversion_": [0, 10, 11], "composit": [0, 3, 7, 8, 10, 13], "us": [0, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15], "henc": [0, 4, 6, 9, 13], "need": [0, 4, 6, 9, 13], "longrightarrow": 0, "follow": [0, 3, 4, 6, 7, 9, 10, 13], "special": 0, "f": [0, 1, 8, 9, 13, 15], "takin": 0, "two": [0, 3, 4, 6, 7, 9, 10, 13, 14], "variabl": [0, 3, 6, 10, 13, 14], "both": [0, 4], "data": [0, 3, 4, 7, 13, 14, 15], "0": [0, 3, 4, 6, 8, 9, 10, 13], "lip": [0, 13, 14], "lipschitz": [0, 3, 13, 14], "constant": [0, 3, 9, 13, 14], "gradient": [0, 3, 4, 9, 10, 11, 13, 14], "isconvex": [0, 9, 14], "convex": [0, 9, 13, 14], "issepar": [0, 14], "separ": [0, 4, 14], "basi": [0, 14], "fix": [0, 7, 14], "applygrad": [0, 9, 11, 13], "nabla": [0, 3, 4, 9, 13], "applygrad_": [0, 3, 11], "applyprox": [0, 9, 11, 13], "z": [0, 3, 9, 15], "alpha": [0, 3, 9], "proxim": [0, 3, 9, 13, 15], "prox": [0, 3, 9, 11, 13], "arg": 0, "min": [0, 10, 13], "u": [0, 2, 9, 15], "frac": [0, 3, 12, 13], "2": [0, 3, 4, 6, 8, 9, 10, 12, 13, 15], "_2": [0, 4], "applyprox_": [0, 3, 9, 11], "applyproxfench": [0, 11], "fenchel": [0, 11, 13], "transform": [0, 10, 11, 13], "applyproxfench_": [0, 11], "By": [0, 9], "moreau": 0, "": [0, 3, 4, 10, 15], "set_i": 0, "set": [0, 3, 4, 6, 9, 13], "ha": [0, 6, 7, 9, 13], "conform": [0, 9], "scalar": [0, 3, 13], "setget": 0, "optim": [0, 4, 8, 14, 15], "algorithm": [0, 4, 7, 8, 9, 11, 14, 15], "minim": [0, 4, 7, 13, 14], "maxit": [0, 3, 4, 14], "maxim": [0, 4, 13, 14], "number": [0, 4, 10, 13, 14], "iter": [0, 3, 4, 7, 9, 11, 13, 14], "50": [0, 3], "verbos": [0, 4], "bollean": 0, "activ": [0, 6, 7, 9, 13, 15], "mode": [0, 7, 13], "outop": [0, 3, 4, 13, 14], "outputopti": [0, 4, 14], "itupout": [0, 4, 13, 14], "between": [0, 6, 8, 9, 13, 14], "updat": [0, 3, 7, 11, 13, 14], "cvop": [0, 4], "testcvg": 0, "execut": [0, 13, 14], "niter": [0, 14], "counter": [0, 13, 14], "xopt": [0, 13, 14], "run": [0, 4, 7, 11], "x0": [0, 13], "initi": [0, 11, 13], "point": [0, 10, 11, 12], "argument": [0, 4, 6], "restart": [0, 13], "valu": [0, 3, 7, 9, 10, 13], "doe": 0, "anyth": 0, "being": 0, "public": [0, 1, 8], "doiter": [0, 11, 13], "flag": 0, "opti_next_it": 0, "go": [0, 9], "next": [0, 9], "opti_redo_it": 0, "redo": 0, "opti_stop": 0, "stop": [0, 13], "updateparam": [0, 11], "each": [0, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14], "make": [0, 6, 9, 13], "some": [0, 7, 9], "vari": 0, "dure": [0, 9, 13], "e": [0, 1, 3, 6, 7, 8, 9, 10, 11, 13, 15], "descent": [0, 11, 13], "step": [0, 4, 9, 10, 11, 13], "lagrangian": [0, 13], "starting_verb": [0, 11], "displai": [0, 7, 11, 13], "start": [0, 4, 11], "messag": [0, 11, 13], "ending_verb": [0, 11], "end": [0, 3, 6, 9, 11], "The": [0, 3, 4, 6, 7, 8, 9, 10, 11, 13], "basic": [0, 9, 13], "thei": [0, 7, 9], "instanci": [0, 4, 7, 9], "mainli": 0, "insid": 0, "algebra": [0, 4, 9, 13], "machineri": 0, "_1": [0, 3], "h1": [0, 3, 9], "h2": [0, 3, 9], "build": [0, 4, 7, 8, 10, 11], "minv": 0, "sum_i": 0, "alpha_i": 0, "_i": 0, "cell": [0, 13], "arrai": [0, 3, 10, 11, 13], "coeffici": [0, 10], "map1": 0, "map2": 0, "tlinop": 0, "tadj": 0, "l": [0, 1, 3, 4, 8, 9, 10, 13, 15], "mapopsumm": 0, "linopscaledident": 0, "yet": 0, "empti": [0, 13], "c_1": 0, "c1": 0, "c2": 0, "mulcost": 0, "cost1": 0, "cost2": 0, "c_i": 0, "acost": 0, "makepartialsumm": 0, "lsub": 0, "case": [0, 3, 13], "costrectangl": 0, "i_c": 0, "circ": 0, "refer": [0, 3, 13], "A": [0, 1, 3, 7, 8, 11, 13, 15], "dougla": [0, 13], "rachford": [0, 13], "split": [0, 4, 7, 13], "approach": [0, 3, 15], "nonsmooth": 0, "variat": [0, 13, 15], "signal": [0, 4, 13, 15], "recoveri": [0, 13], "combett": [0, 13], "pesquet": 0, "journal": [0, 3, 13, 15], "select": [0, 4, 6, 7, 10, 13], "topic": 0, "process": [0, 3, 13, 15], "4": [0, 3, 4, 9, 13, 15], "564": 0, "574": 0, "2007": 0, "subset": [0, 3, 10], "partialgrad": 0, "partial": 0, "stochast": 0, "equal": [0, 10], "indic": [0, 3, 4, 7], "setlsub": 0, "program": [1, 13], "free": [1, 8, 15], "softwar": 1, "you": [1, 15], "redistribut": 1, "modifi": [1, 7], "under": [1, 9], "term": [1, 4, 7, 13], "gnu": 1, "licens": 1, "publish": 1, "foundat": [1, 13], "version": [1, 13], "3": [1, 3, 4, 9, 10, 13, 15], "your": [1, 8, 15], "ani": [1, 2, 6, 9, 11, 13], "later": 1, "distribut": [1, 13], "hope": 1, "without": [1, 9], "warranti": 1, "even": 1, "impli": 1, "merchant": 1, "fit": [1, 15], "FOR": 1, "particular": [1, 3], "purpos": 1, "should": [1, 6, 9, 10, 13], "have": [1, 3, 4, 6, 7, 9, 10, 13, 14], "receiv": 1, "along": [1, 3, 10], "http": 1, "www": 1, "org": 1, "whenev": [1, 7], "present": [1, 7, 13], "pleas": 1, "cite": 1, "pocket": [1, 8], "guid": [1, 8, 9], "solv": [1, 8, 13, 15], "problem": [1, 3, 8, 9, 13, 15], "35": [1, 8], "10": [1, 3, 4, 8, 13, 15], "2019": [1, 8, 15], "soubi": [1, 3, 8, 15], "soulez": [1, 8, 15], "t": [1, 3, 8, 9, 13, 15], "mccann": [1, 8, 15], "pham": [1, 8, 15], "donati": [1, 8, 15], "debarr": [1, 8, 15], "d": [1, 8, 10, 15], "sage": [1, 8, 15], "unser": [1, 3, 8, 15], "For": [2, 6, 7, 9, 10, 13], "question": 2, "concern": 2, "contain": [3, 4, 7, 8, 9, 10, 12, 13], "class": [3, 6, 8, 10, 11, 12, 13, 14], "abstract": [3, 8, 9, 10, 11, 12, 13, 14], "whatev": [3, 10], "input": [3, 9, 10, 11, 12, 14], "null": 3, "situat": 3, "const": 3, "output": [3, 4, 10, 14], "sz": [3, 4, 10, 12], "costmod2": 3, "map": [3, 9, 10, 12, 15], "linop": [3, 8, 9, 13], "sum_k": 3, "vert": [3, 12, 13], "k": [3, 10, 13, 15], "sqrt": [3, 12, 13], "beta": [3, 13], "magnitud": [3, 12], "pixel": [3, 10], "linopgrad": [3, 4], "bet": 3, "smooth": [3, 13], "1e": [3, 4, 13], "gr": 3, "verveer": 3, "gemkow": 3, "jovin": 3, "1999": 3, "comparison": [3, 9, 15], "imag": [3, 4, 8, 10, 13, 15], "restor": [3, 13], "three": [3, 4, 15], "dimension": [3, 15], "confoc": [3, 13], "wide": 3, "fluoresc": 3, "microscopi": [3, 13, 15], "193": 3, "61": [3, 15], "weight": [3, 13], "hyperbol": 3, "sum_": [3, 13], "w_k": 3, "varepsilon_k": 3, "index": [3, 9, 10], "l2": [3, 4], "inner": [3, 10, 13, 15], "over": [3, 4, 9, 10, 13], "epsilon": 3, "k_": 3, "w": [3, 10, 13], "kullbackleibl": [3, 13], "diverg": [3, 13], "sum_n": [3, 13], "d_": 3, "kl": 3, "_n": [3, 13], "lbrace": 3, "begin": [3, 6], "ll": [3, 13], "log": [3, 13], "text": [3, 13], "newlin": 3, "infti": 3, "l1": 3, "nonneg": [3, 4], "add": [3, 6, 15], "posit": [3, 10, 13], "constraint": [3, 4, 9, 13, 15], "sign": 3, "max": [3, 4, 10, 13], "subgradi": 3, "frac12": [3, 4, 13], "2_w": [3, 13], "continu": [3, 13, 15], "leq": [3, 13], "wy": 3, "divis": 3, "compon": 3, "instanti": [3, 7, 9], "operationsonmap": 3, "costcomposit": [3, 9, 13], "scale": 3, "2_": 3, "evalu": [3, 9, 13], "langl": 3, "rangl": 3, "j_": 3, "wh": 3, "invert": [3, 4, 9, 12, 13, 14], "twy": 3, "In": [3, 4, 6, 7, 9, 13], "woodburi": 3, "formula": 3, "linopcomposit": 3, "linopdownsampl": 3, "linopconv": [3, 4, 9], "linopsum": 3, "zhao": [3, 15], "ningn": 3, "et": [3, 13], "al": [3, 13], "fast": [3, 8, 9, 13], "singl": [3, 6, 15], "super": [3, 15], "resolut": [3, 10, 15], "analyt": 3, "solut": [3, 9, 13], "ieee": [3, 13, 15], "transact": [3, 13, 15], "25": [3, 15], "8": [3, 13, 15], "3683": 3, "3697": 3, "2016": 3, "emmanuel": [3, 13], "michael": 3, "slice": [3, 10, 15], "illumin": [3, 15], "2018": [3, 8, 15], "mix": [3, 4], "cdot": [3, 9], "vert_2": 3, "y_": [3, 10], "foral": [3, 10], "non": [3, 8, 10, 13], "neg": 3, "geq": [3, 4, 13], "cd": 3, "schatten": 3, "sp": 3, "here": [3, 4, 5, 7, 9, 13], "denot": [3, 13], "order": [3, 6, 7, 9, 10, 13], "shatten": 3, "defin": [3, 4, 6, 10, 13], "sigma_k": 3, "th": [3, 10], "singular": 3, "other": [3, 4, 9, 13], "word": 3, "lp": 3, "signular": 3, "actual": 3, "work": [3, 10, 15], "form": [3, 7, 10, 13], "nxmx3": 3, "symetr": 3, "2x2": [3, 10], "bmatrix": 3, "ell_1": 3, "nxmxkx6": 3, "3x3": 3, "5": [3, 9, 13, 15], "6": [3, 4, 13, 15], "lefkimmiati": 3, "ward": 3, "2013": [3, 13], "hessian": [3, 10, 15], "regular": [3, 4, 7, 13, 15], "22": [3, 15], "1873": 3, "1888": 3, "robust": [3, 15], "penal": 3, "rho": [3, 13], "differ": [3, 9, 10, 13, 14], "andrew": 3, "beaton": 3, "tukei": 3, "cauchi": 3, "fair": 3, "huber": 3, "logist": 3, "talwar": 3, "hinich": 3, "welsch": 3, "denni": 3, "mu": 3, "tune": 3, "339": 3, "685": 3, "385": 3, "400": 3, "345": 3, "205": 3, "795": 3, "985": 3, "flag_": 3, "residu": 3, "befor": 3, "none": [3, 13], "mad": 3, "median": 3, "absolut": [3, 13], "deviat": 3, "std": 3, "standard": 3, "noise_model": 3, "model": [3, 4, 8, 13, 15], "nois": 3, "accord": [3, 6, 13], "poisson": 3, "scaling_factor": 3, "var_0": 3, "varianc": 3, "flux": 3, "eta": [3, 13], "ratio": 3, "unit": [3, 10, 15], "flag_memoizer": 3, "h_2": 3, "setproxalgo": 3, "bound": [3, 13], "xtol": [3, 14], "optifgp": 3, "rectangl": 3, "real": [3, 4, 10], "xmin": [3, 13], "xmax": [3, 13], "minimum": 3, "inf": [3, 13], "0i": 3, "maximum": 3, "complex": [3, 10, 12], "ring": 3, "outer": 3, "radiu": 3, "circl": 3, "indoc": 3, "disk": 3, "we": [4, 9, 10, 13], "consid": [4, 9], "elegan": 4, "embryo": 4, "dataset": 4, "672": 4, "712": 4, "104": 4, "download": [4, 8], "shown": 4, "figur": 4, "sampl": [4, 15], "nuclei": 4, "dapi": 4, "channel": [4, 7], "blue": 4, "protein": 4, "spot": 4, "cy3": 4, "red": 4, "microtubul": 4, "fitc": 4, "green": 4, "psf": [4, 7, 9, 10], "theoret": 4, "what": 4, "deconvolv": 4, "code": [4, 6, 8, 9], "fig": [4, 9], "chromosom": 4, "stain": [4, 15], "read": [4, 8, 13], "doubl": [4, 6, 9], "loadtiff": 4, "psfname": 4, "datanam": 4, "maxi": 4, "resiz": 4, "enforc": 4, "complianc": 4, "period": 4, "assumpt": 4, "fft": [4, 9, 10], "particularli": 4, "relev": [4, 11], "axial": [4, 15], "direct": [4, 10, 13], "boundari": [4, 10], "volum": 4, "fft_best_dim": 4, "util": 4, "folder": [4, 6, 7, 9, 13], "suit": 4, "effici": [4, 9, 13, 15], "padsz": 4, "52": 4, "sznew": 4, "halfpad": 4, "padarrai": 4, "now": [4, 9], "our": [4, 9], "fidel": [4, 7], "tv": [4, 13, 15], "least": [4, 7], "squar": [4, 12], "fftn": [4, 9, 10], "fftshift": 4, "convolut": [4, 9, 10, 15], "linopselectorpatch": 4, "selector": [4, 10], "costl2": [4, 9, 13], "cost": [4, 8, 9, 13], "freg": 4, "costmixnorm21": 4, "opreg": 4, "lamb": [4, 13], "2e": 4, "po": 4, "costnonneg": 4, "id": 4, "linopident": [4, 9], "mathcal": [4, 13], "shx": 4, "lambda": [4, 13], "i_": [4, 10], "unpad": 4, "valid": [4, 7], "part": [4, 10], "respect": [4, 6, 9, 11], "readi": 4, "admm": [4, 7, 13, 15], "dispit": 4, "30": [4, 15], "300": 4, "fn": [4, 13], "f_n": [4, 13], "constitut": 4, "hn": [4, 13], "associ": [4, 7, 9, 10, 13], "h_n": [4, 13], "rho_n": [4, 13], "optiadmm": 4, "declar": 4, "round": 4, "testcvgcombin": 4, "testcvgcostrel": 4, "steprel": 4, "converg": [4, 13, 15], "test": [4, 13], "zero": [4, 6, 10], "been": [4, 6, 7, 9], "u_1": 4, "u_2": 4, "u_3": 4, "solver": [4, 13, 15], "5th": 4, "sinc": [4, 9], "ensur": [4, 13], "rho_1": 4, "rho_2": 4, "rho_3": 4, "automat": [4, 7, 8, 13, 15], "put": 5, "global": 5, "definit": [5, 13], "script": [6, 7, 8], "easili": [6, 7], "switch": 6, "To": [6, 7, 9, 13], "onli": [6, 7, 9, 10, 13], "simpl": [6, 13], "usegpu": 6, "gpucpuconvert": 6, "take": [6, 9, 10, 13], "cpu": 6, "parrallel": 6, "toolbox": 6, "cudamat": 6, "github": 6, "document": [6, 14], "convert": 6, "correct": [6, 7, 9, 15], "type": [6, 7, 9], "gpuarrai": 6, "cuda": 6, "instanc": [6, 7, 9, 10], "chang": [6, 7, 9], "But": 6, "send": 6, "graphic": [6, 8], "card": 6, "creat": [6, 7, 9], "load": [6, 7], "suffici": 6, "larg": [6, 13], "small": 6, "line": [6, 10, 15], "Then": [6, 7, 9], "simpli": 6, "control": [6, 9], "place": 6, "ones": [6, 7, 9, 10, 13], "alloc": 6, "directli": [6, 9, 12], "instead": [6, 10, 11, 13], "transfer": 6, "them": [6, 9], "thing": 6, "transpar": 6, "keep": 6, "clear": 6, "occur": 6, "within": [6, 7, 8, 9], "replac": 6, "ones_": 6, "zeros_": 6, "These": [6, 9], "state": [6, 9], "3d": [6, 10, 13, 15], "deconvolut": [6, 7, 13, 15], "show": [6, 9], "ditribut": 7, "togeth": 7, "friendli": 7, "intuit": 7, "tailor": 7, "reconstruct": [7, 10, 15], "effort": 7, "gui_globalbioim": 7, "mlapp": 7, "file": [7, 8, 9], "temporari": 7, "explanatori": 7, "how": [7, 9], "concret": 7, "multi": [7, 15], "concis": 7, "better": 7, "qualiti": [7, 15], "prepar": 7, "come": 7, "out": 7, "soon": [7, 13], "four": [7, 9], "edit": [7, 9], "inform": [7, 8, 15], "about": 7, "offer": [7, 9], "possibl": [7, 9], "elementari": 7, "ad": 7, "remov": 7, "interchang": 7, "moreov": [7, 9], "own": 7, "push": 7, "button": 7, "final": 7, "through": [7, 8], "tool": [7, 8, 9], "Its": [7, 9], "similar": 7, "last": [7, 10], "built": 7, "profici": 7, "propos": [7, 13], "adapt": [7, 13, 15], "specif": [7, 9, 10, 13], "list": [7, 8, 15], "obtain": 7, "click": 7, "refresh": 7, "onc": 7, "gpu": [7, 8], "varieti": 7, "depend": [7, 9], "strategi": [7, 13], "coupl": [7, 15], "mai": [7, 8, 9, 13], "tri": 7, "much": 7, "nest": 7, "addit": 7, "open": 7, "dynam": 7, "those": 7, "syntax": 7, "everyth": 7, "close": 7, "illustr": 7, "complet": 7, "error": [7, 10, 13], "detect": [7, 15], "report": [7, 15], "must": [7, 10, 13], "treat": 7, "appear": 7, "frequent": 7, "cascad": 7, "resolv": 7, "veri": 7, "first": [7, 8, 9, 10, 13, 15], "abov": [7, 9, 13], "due": [7, 9], "wrong": 7, "path": 7, "foward": 7, "good": 7, "practic": [7, 9], "again": 7, "repeat": 7, "long": 7, "want": [7, 9, 15], "gather": [7, 15], "discard": 7, "let": [7, 9], "modul": 8, "facilit": 8, "forward": [8, 13], "capit": 8, "strong": 8, "common": 8, "variou": 8, "format": 8, "exploit": 8, "streamlin": 8, "page": 8, "comment": 8, "januari": 8, "2021": [8, 15], "gui": 8, "april": 8, "septemb": 8, "juli": 8, "speed": [8, 9], "up": 8, "mileston": 8, "march": 8, "novemb": 8, "2017": [8, 15], "flexibl": 8, "improv": [8, 15], "june": [8, 13], "support": 8, "european": 8, "research": [8, 13], "council": 8, "\u00e9cole": 8, "polytechniqu": 8, "f\u00e9d\u00e9rale": 8, "de": 8, "lausann": 8, "switzerland": 8, "cibm": 8, "center": [8, 10], "biomed": 8, "clone": 8, "import": [8, 13], "user": [8, 9, 13], "interfac": [8, 11], "relat": [8, 9], "paper": 8, "condit": [8, 10], "opti": [8, 9], "speedup": 8, "group": 8, "contact": [8, 15], "develop": 9, "who": 9, "organ": 9, "low": 9, "duplic": 9, "few": 9, "hard": 9, "systemat": 9, "choic": [9, 13], "consum": 9, "slower": 9, "nonlinear": [9, 15], "except": 9, "check": 9, "morev": 9, "manag": 9, "mechan": [9, 14, 15], "Their": 9, "level": [9, 11], "deal": 9, "system": [9, 10, 13], "well": 9, "alwai": [9, 10], "pair": 9, "symbol": 9, "fals": [9, 10, 13], "acceler": [9, 13], "price": 9, "larger": [9, 10], "consumpt": 9, "quantiti": 9, "bypass": 9, "presenc": 9, "limit": [9, 13], "look": 9, "oprer": 9, "512": 9, "256": 9, "rand": 9, "tic": 9, "toc": 9, "elaps": 9, "414025": 9, "second": 9, "085205": 9, "465424": 9, "083087": 9, "appreci": 9, "effect": 9, "observ": [9, 13, 15], "combin": [9, 13, 15], "costl2composit": 9, "236043": 9, "554012": 9, "572284": 9, "advantag": 9, "ifft": 9, "subsequentg": 9, "reduc": [9, 13], "Of": 9, "cours": 9, "after": 9, "produc": 9, "572987": 9, "075061": 9, "deploi": 9, "made": 9, "prefix": 9, "lose": 9, "find": 9, "isa": 9, "linopdiag": 9, "isscaledident": 9, "diag": [9, 10], "mtf": [9, 10], "isreal": [9, 10], "elseif": 9, "els": 9, "ab": 9, "proper": 9, "kernel": [9, 15], "fft2": 9, "256x256": 9, "notindex": 9, "ndm": 9, "0000": 9, "1x1": 9, "struct": 9, "9999": 9, "hold": 9, "semi": [9, 13], "orthogon": 9, "nu": [9, 13], "constructor": 9, "ish2semiortho": 9, "ish2linop": 9, "As": 9, "diagon": [9, 10], "recommend": 9, "slow": 9, "freeli": 9, "shallow": 9, "handl": [9, 13], "mean": 9, "share": 9, "cach": 9, "whole": 9, "life": 9, "prevent": 9, "behavior": 9, "117364": 9, "090888": 9, "b": [9, 13, 15], "089999": 9, "250312": 9, "180036": 9, "202259": 9, "194160": 9, "097449": 9, "sever": [9, 13], "includ": 9, "viewer": 9, "give": [9, 10, 11, 14], "checkmap": 9, "verifi": [9, 13], "ok": 9, "snr": [9, 13], "296": 9, "db": [9, 10], "306": 9, "318": 9, "331": 9, "help": 9, "found": [9, 13, 14], "templatemap": 9, "templatelinop": 9, "templatecost": 9, "templateopti": 9, "broacast": 10, "broadcast": 10, "mapsto": 10, "y_k": 10, "sum_l": 10, "2x3": 10, "lead": 10, "fourier": [10, 15], "spread": 10, "comform": 10, "keyword": 10, "pad": 10, "padvalu": 10, "userft": 10, "half": 10, "matter": 10, "equival": 10, "singleton": 10, "consist": 10, "column": 10, "bsxfun": 10, "discret": [10, 15], "cosin": 10, "2d": 10, "dct": 10, "dct2": 10, "idct2": 10, "finit": 10, "bc": 10, "circular": 10, "mirror": 10, "re": [10, 11], "rft": 10, "lidx": 10, "length": 10, "repres": 10, "upper": 10, "symmetr": [10, 13], "top": 10, "bottom": 10, "2f": 10, "dxx": 10, "dxy": 10, "dxz": 10, "dyi": 10, "dyz": 10, "dzz": 10, "unitari": 10, "normal": 10, "dft": 10, "doc": 10, "wich": 10, "sdft": 10, "ifftn": 10, "sfft": 10, "isfft": 10, "reshap": 10, "parallel": [10, 15], "rai": [10, 15], "radon": 10, "domain": [10, 15], "1x2": 10, "apropir": 10, "milimeter": 10, "theta": 10, "1x": 10, "project": [10, 15], "radian": 10, "co": [10, 15], "sin": 10, "axi": 10, "coordin": 10, "row": 10, "rotat": 10, "assum": 10, "floor": 10, "ceil": 10, "Be": 10, "warn": [10, 13], "accur": [10, 15], "around": [10, 15], "20": [10, 13, 15], "500x500": 10, "px": 10, "smaller": 10, "hth": [10, 11], "extract": 10, "entri": 10, "sel": 10, "colunm": 10, "downsampl": 10, "patch": 10, "_k": [10, 12], "factor": 10, "df": 10, "divid": 10, "idxmin": 10, "kept": 10, "idxmax": 10, "squeezeflag": 10, "squeez": 10, "overview": [11, 14], "thu": [11, 14], "core": 11, "mother": 11, "becom": 11, "seal": 11, "reason": [11, 13], "descript": [11, 14], "makeinvers": 11, "anoth": 11, "hht": 11, "makeadjoint": 11, "auxilliari": 11, "var": [11, 13], "nonlinop": 12, "elementwiseop": 12, "modulu": 12, "pointwis": 12, "mod": 12, "func": 12, "func_grad": 12, "differenti": [12, 13, 14, 15], "func_inv": 12, "x_k": 12, "root": 12, "opewsquareroot": 12, "squaredmagnitud": 12, "altern": 13, "f_0": 13, "maxitercg": 13, "conjug": 13, "cg": 13, "z_n": 13, "outopcg": 13, "itupoutcg": 13, "principl": 13, "aim": 13, "formul": 13, "y_1": 13, "y_n": 13, "w_1": 13, "w_n": 13, "h_nx": 13, "scheme": 13, "quad": 13, "h_0": 13, "boyd": 13, "stephen": 13, "statist": [13, 15], "learn": [13, 15], "via": [13, 15], "trend": 13, "machin": 13, "2011": 13, "f0": 13, "chambol": 13, "pock": 13, "tau": 13, "sig": 13, "bar": 13, "primal": 13, "dual": 13, "gam": 13, "uniformli": 13, "fact": 13, "prox_fench": 13, "sigma": 13, "antonin": 13, "thoma": 13, "mathemat": [13, 15], "vision": 13, "40": 13, "pp": [13, 15], "120": 13, "145": 13, "cp": 13, "ax": 13, "tax": 13, "tx": 13, "f_1": 13, "f_2": 13, "gamma": 13, "relax": 13, "parmet": 13, "dr": 13, "f1": 13, "f2": 13, "backward": 13, "fista": 13, "momrestart": 13, "moment": 13, "updategam": 13, "rule": 13, "decreas": 13, "backtrack": 13, "greater": 13, "than": 13, "nonconvex": 13, "waj": 13, "siam": [13, 15], "multiscal": 13, "simul": 13, "vol": 13, "1168": 13, "1200": 13, "2005": 13, "hedi": 13, "attouch": 13, "jerom": 13, "bolt": 13, "benar": 13, "fux": 13, "svaiter": 13, "tame": 13, "gaussiedel": 13, "137": 13, "amir": 13, "beck": 13, "marc": 13, "teboul": 13, "shrinkag": 13, "threshold": 13, "scienc": [13, 15], "182": 13, "202": 13, "2009": 13, "brendan": 13, "o": [13, 15], "donoghu": 13, "cand\u00e8": 13, "2015": 13, "math": 13, "15": [13, 15], "715": 13, "732": 13, "fb": 13, "2_2": 13, "costtv": 13, "constrain": [13, 15], "total": [13, 15], "denois": 13, "deblur": 13, "18": [13, 15], "11": [13, 15], "2419": 13, "2434": 13, "fgp": 13, "setlambda": 13, "new_l": 13, "setbound": 13, "new_b": 13, "nagd": 13, "nesterov": 13, "yurii": 13, "introductori": 13, "lectur": 13, "1998": 13, "119": 13, "gd": 13, "condat": 13, "grad": 13, "theorem": 13, "delta": 13, "laurent": 13, "involv": 13, "lipchitzian": 13, "theori": [13, 15], "158": 13, "460": 13, "479": 13, "xtild": 13, "richardson": 13, "luci": 13, "costkullleib": 13, "vert_": 13, "epsl": 13, "interest": [13, 15], "anymor": 13, "too": 13, "carefulli": 13, "chosen": 13, "leon": 13, "techniqu": [13, 15], "rectif": 13, "astronom": 13, "1974": 13, "william": 13, "hadlei": 13, "bayesian": 13, "josa": [13, 15], "1972": 13, "55": 13, "59": 13, "dei": 13, "With": [13, 15], "microscop": [13, 15], "2006": 13, "rl": 13, "metric": 13, "vmlmb": 13, "optimpacklegaci": 13, "precondit": 13, "mani": 13, "m_vmlmb_first": 13, "matlaboptimpack": 13, "eric": 13, "thiebaut": 13, "issu": 13, "blind": 13, "spie": 13, "conf": 13, "analysi": 13, "ii": 13, "4847": 13, "174": 13, "183": 13, "2002": 13, "repositori": 13, "At": 13, "acheiv": 13, "plot": 13, "stuff": 13, "ground": 13, "truth": 13, "computecost": 13, "evolcost": 13, "evolut": 13, "savexopt": 13, "evolxopt": 13, "iterverb": 13, "costindex": 13, "among": 13, "outopti": 13, "uniqu": [13, 15], "imput": 13, "routin": 13, "access": 13, "init": 13, "outputoptisnr": 13, "dedic": [13, 14], "often": 13, "xtrue": 13, "ytwy": 13, "monitor": 13, "criterion": 13, "testconverg": 13, "cvopti": 13, "noth": 13, "break": 13, "costrel": 13, "000001": 13, "costabsolut": 13, "costabsolutetol": 13, "toler": [13, 14], "costrelativetol": 13, "rel": [13, 14], "steprelativetol": 13, "ref": 13, "redidu": 13, "eps_ab": 13, "eps_rel": 13, "termin": 13, "costli": 13, "further": 14, "technic": 14, "hesit": 15, "surpass": 15, "challeng": 15, "flexsim": 15, "biorxiv": 15, "preprint": 15, "nogueron": 15, "pelleti": 15, "mangeat": 15, "leterri": 15, "14": 15, "artifact": 15, "optic": 15, "tomographi": 15, "classif": 15, "calibr": 15, "continuum": 15, "12": 15, "2577": 15, "2589": 15, "2022": 15, "liu": 15, "dong": 15, "marelli": 15, "13": 15, "lensless": 15, "coher": 15, "thin": 15, "9": 15, "f34": 15, "f46": 15, "rostyku": 15, "moser": 15, "rexpaco": 15, "high": 15, "contrast": 15, "circumstellar": 15, "environ": 15, "angular": 15, "astronomi": 15, "astrophys": 15, "651": 15, "a62": 15, "24": 15, "flasseur": 15, "th\u00e9": 15, "deni": 15, "thi\u00e9baut": 15, "langloi": 15, "uvtomo": 15, "gan": 15, "adversari": 15, "unknown": 15, "view": 15, "tomograph": 15, "proceed": 15, "isbi": 15, "zehni": 15, "gaug": 15, "diffract": 15, "pattern": 15, "bandwidth": 15, "estim": 15, "60": 15, "b38": 15, "b48": 15, "regress": 15, "sparsiti": 15, "201": 15, "224": 15, "aziznejad": 15, "pic": 15, "reduct": 15, "integr": 15, "spectrograph": 15, "sphere": 15, "instrument": 15, "635": 15, "a90": 15, "2020": 15, "berdeu": 15, "7": 15, "joint": 15, "refin": 15, "particl": 15, "cryo": 15, "em": 15, "29": 15, "6151": 15, "6163": 15, "lippmann": 15, "schwinger": 15, "727": 15, "738": 15, "ayoub": 15, "lim": 15, "psalti": 15, "240": 15, "250": 15, "ma": 15, "tirf": 15, "background": 15, "blanc": 15, "feraud": 15, "schaub": 15, "van": 15, "obberghen": 15, "schill": 15, "nanometr": 15, "fibronectin": 15, "assembli": 15, "achiev": 15, "angl": 15, "scientif": 15, "radwanska": 15, "grall": 15, "region": 15, "back": 15, "vilaclara": 15, "scatter": 15, "express": 15, "21786": 15, "21800": 15, "34": 15, "mini": 15, "batch": 15, "quasi": 15, "newton": 15, "arxiv": 15, "hong": 15, "yavneh": 15, "33": 15, "helmholtz": 15, "equat": 15, "multigrid": 15, "treister": 15, "32": 15, "multispectr": 15, "hologram": 15, "aberr": 15, "compens": 15, "gram": 15, "bacteria": 15, "14437": 15, "2023": 15, "brault": 15, "olivi": 15, "faur": 15, "dixneuf": 15, "kolytcheff": 15, "charmett": 15, "fournier": 15, "31": 15, "framework": 15, "investig": 15, "neural": 15, "network": 15, "71": 15, "2043": 15, "2055": 15, "bohra": 15, "pla": 15, "giovannelli": 15, "unsupervis": 15, "digit": 15, "holograph": 15, "quantit": 15, "21": 15, "38383": 15, "38404": 15, "joshi": 15, "705": 15, "720": 15, "28": 15, "spline": 15, "spars": 15, "curv": 15, "4707": 15, "4718": 15, "jover": 15, "27": 15, "quadrupl": 15, "asteroid": 15, "third": 15, "moon": 15, "130": 15, "elektra": 15, "IFS": 15, "658": 15, "vachier": 15, "26": 15, "focu": 15, "plane": 15, "bead": 15, "thibon": 15, "mee": 15, "measur": 15, "grid": 15, "422": 15, "q": 15, "denoyel": 15, "fageot": 15, "sparsest": 15, "piecewis": 15, "406": 15, "23": 15, "depth": 15, "enhanc": 15, "binari": 15, "phase": 15, "mask": 15, "osa": 15, "589": 15, "601": 15, "l\u00e9v\u00eaque": 15, "kulcs\u00e1r": 15, "goudail": 15, "laser": 15, "engin": 15, "146": 15, "momei": 15, "pinston": 15, "molecul": 15, "local": 15, "commun": 15, "499": 15, "feasibl": 15, "19": 15, "l_p": 15, "68": 15, "4543": 15, "4554": 15, "scan": 15, "transmiss": 15, "watt": 15, "r\u00f6sner": 15, "17": 15, "16": 15, "projector": 15, "3905": 15, "3921": 15, "yang": 15, "gupta": 15, "fienup": 15, "retriev": 15, "holographi": 15, "tutori": 15, "36": 15, "d62": 15, "d80": 15, "hybrid": 15, "dictionari": 15, "67": 15, "5824": 15, "5836": 15, "14951": 15, "14968": 15, "m\u00e9\u00e8": 15, "grosjean": 15, "exact": 15, "65": 15, "4457": 15, "4470": 15, "geometr": 15, "invari": 15, "icassp": 15, "huang": 15, "dokmani\u0107": 15, "exactli": 15, "multiresolut": 15, "loop": 15, "densiti": 15, "electron": 15, "133": 15, "phaseless": 15, "beam": 15, "propag": 15, "goi": 15, "ventral": 15, "nerv": 15, "cord": 15, "behav": 15, "adult": 15, "drosophila": 15, "natur": 15, "4390": 15, "chen": 15, "herman": 15, "viswanathan": 15, "fortun": 15, "aymann": 15, "cammarato": 15, "dickinson": 15, "ramdya": 15, "versatil": 15, "intens": 15, "2749": 15, "2763": 15, "4509": 15, "4522": 15, "jin": 15, "froustei": 15, "ct": 15, "interpol": 15, "4639": 15, "4647": 15, "compact": 15, "societi": 15, "america": 15, "4438": 15, "4445": 15, "lensfre": 15, "elsevi": 15, "136": 15, "youtub": 7, "link": 7}, "objects": {"": [[0, 0, 1, "", "Abstract"], [0, 0, 0, "-", "Abstract"], [3, 0, 1, "", "Cost"], [3, 0, 0, "-", "Cost"], [10, 0, 1, "", "LinOp"], [10, 0, 0, "-", "LinOp"], [12, 0, 1, "", "NonLinOp"], [12, 0, 0, "-", "NonLinOp"], [13, 0, 1, "", "Opti"], [13, 0, 0, "-", "Opti"]], "Abstract": [[0, 1, 1, "", "Cost"], [0, 1, 1, "", "LinOp"], [0, 1, 1, "", "Map"], [0, 0, 1, "", "OperationsOnMaps"], [0, 0, 0, "-", "OperationsOnMaps"], [0, 1, 1, "", "Opti"]], "Abstract.Cost": [[0, 2, 1, "", "applyGrad"], [0, 2, 1, "", "applyGrad_"], [0, 2, 1, "", "applyJacobianT_"], [0, 2, 1, "", "applyProx"], [0, 2, 1, "", "applyProxFench"], [0, 2, 1, "", "applyProxFench_"], [0, 2, 1, "", "applyProx_"], [0, 2, 1, "", "makeComposition_"], [0, 2, 1, "", "minus_"], [0, 2, 1, "", "plus_"], [0, 2, 1, "", "set_y"]], "Abstract.LinOp": [[0, 2, 1, "", "applyAdjoint"], [0, 2, 1, "", "applyAdjointInverse"], [0, 2, 1, "", "applyAdjointInverse_"], [0, 2, 1, "", "applyAdjoint_"], [0, 2, 1, "", "applyHHt"], [0, 2, 1, "", "applyHHt_"], [0, 2, 1, "", "applyHtH"], [0, 2, 1, "", "applyHtH_"], [0, 2, 1, "", "applyJacobianT_"], [0, 2, 1, "", "ctranspose"], [0, 2, 1, "", "makeAdjoint_"], [0, 2, 1, "", "makeComposition_"], [0, 2, 1, "", "makeHHt"], [0, 2, 1, "", "makeHHt_"], [0, 2, 1, "", "makeHtH"], [0, 2, 1, "", "makeHtH_"], [0, 2, 1, "", "makeInversion_"], [0, 2, 1, "", "plus_"], [0, 2, 1, "", "transpose"]], "Abstract.Map": [[0, 2, 1, "", "apply"], [0, 2, 1, "", "applyInverse"], [0, 2, 1, "", "applyInverse_"], [0, 2, 1, "", "applyJacobianT"], [0, 2, 1, "", "applyJacobianT_"], [0, 2, 1, "", "apply_"], [0, 2, 1, "", "copyElement"], [0, 2, 1, "", "makeComposition"], [0, 2, 1, "", "makeComposition_"], [0, 2, 1, "", "minus"], [0, 2, 1, "", "minus_"], [0, 2, 1, "", "mpower"], [0, 2, 1, "", "mpower_"], [0, 2, 1, "", "mtimes"], [0, 2, 1, "", "plus"], [0, 2, 1, "", "plus_"], [0, 2, 1, "", "times"], [0, 2, 1, "", "times_"]], "Abstract.OperationsOnMaps": [[0, 1, 1, "", "CostComposition"], [0, 1, 1, "", "CostMultiplication"], [0, 1, 1, "", "CostPartialSummation"], [0, 1, 1, "", "CostSummation"], [0, 1, 1, "", "LinOpAdjoint"], [0, 1, 1, "", "LinOpComposition"], [0, 1, 1, "", "LinOpInversion"], [0, 1, 1, "", "LinOpSummation"], [0, 1, 1, "", "MapComposition"], [0, 1, 1, "", "MapInversion"], [0, 1, 1, "", "MapMultiplication"], [0, 1, 1, "", "MapSummation"]], "Abstract.OperationsOnMaps.CostComposition": [[0, 2, 1, "", "applyGrad_"], [0, 2, 1, "", "applyProx_"], [0, 2, 1, "", "makeComposition_"], [0, 2, 1, "", "set_y"]], "Abstract.OperationsOnMaps.CostMultiplication": [[0, 2, 1, "", "applyGrad_"], [0, 2, 1, "", "applyProx_"], [0, 2, 1, "", "apply_"], [0, 2, 1, "", "makeComposition_"]], "Abstract.OperationsOnMaps.CostPartialSummation": [[0, 2, 1, "", "applyGrad_"], [0, 2, 1, "", "apply_"], [0, 2, 1, "", "setLsub"]], "Abstract.OperationsOnMaps.CostSummation": [[0, 2, 1, "", "applyGrad_"], [0, 2, 1, "", "applyProx_"], [0, 2, 1, "", "makePartialSummation"]], "Abstract.OperationsOnMaps.LinOpAdjoint": [[0, 2, 1, "", "applyAdjointInverse_"], [0, 2, 1, "", "applyAdjoint_"], [0, 2, 1, "", "applyHHt_"], [0, 2, 1, "", "applyHtH_"], [0, 2, 1, "", "applyInverse_"], [0, 2, 1, "", "apply_"], [0, 2, 1, "", "makeAdjoint_"], [0, 2, 1, "", "makeHHt_"], [0, 2, 1, "", "makeHtH_"]], "Abstract.OperationsOnMaps.LinOpComposition": [[0, 2, 1, "", "applyAdjointInverse_"], [0, 2, 1, "", "applyAdjoint_"], [0, 2, 1, "", "applyHHt_"], [0, 2, 1, "", "applyHtH_"], [0, 2, 1, "", "apply_"], [0, 2, 1, "", "makeAdjoint_"], [0, 2, 1, "", "makeComposition_"], [0, 2, 1, "", "makeHHt_"], [0, 2, 1, "", "makeHtH_"]], "Abstract.OperationsOnMaps.LinOpInversion": [[0, 2, 1, "", "applyAdjointInverse_"], [0, 2, 1, "", "applyAdjoint_"], [0, 2, 1, "", "makeComposition_"], [0, 2, 1, "", "mpower_"]], "Abstract.OperationsOnMaps.LinOpSummation": [[0, 2, 1, "", "applyAdjoint_"], [0, 2, 1, "", "makeAdjoint_"], [0, 2, 1, "", "plus_"]], "Abstract.OperationsOnMaps.MapComposition": [[0, 2, 1, "", "applyInverse_"], [0, 2, 1, "", "applyJacobianT_"], [0, 2, 1, "", "apply_"], [0, 2, 1, "", "makeComposition_"]], "Abstract.OperationsOnMaps.MapInversion": [[0, 2, 1, "", "applyInverse_"], [0, 2, 1, "", "apply_"], [0, 2, 1, "", "makeComposition_"], [0, 2, 1, "", "mpower_"]], "Abstract.OperationsOnMaps.MapMultiplication": [[0, 2, 1, "", "applyJacobianT_"], [0, 2, 1, "", "apply_"], [0, 2, 1, "", "makeComposition_"]], "Abstract.OperationsOnMaps.MapSummation": [[0, 2, 1, "", "applyJacobianT_"], [0, 2, 1, "", "apply_"], [0, 2, 1, "", "makeComposition_"]], "Abstract.Opti": [[0, 2, 1, "", "doIteration"], [0, 2, 1, "", "ending_verb"], [0, 2, 1, "", "initialize"], [0, 2, 1, "", "run"], [0, 2, 1, "", "starting_verb"], [0, 2, 1, "", "updateParams"]], "Cost": [[3, 1, 1, "", "CostConst"], [3, 1, 1, "", "CostGoodRoughness"], [3, 1, 1, "", "CostHyperBolic"], [3, 1, 1, "", "CostKullLeib"], [3, 1, 1, "", "CostL1"], [3, 1, 1, "", "CostL2"], [3, 1, 1, "", "CostL2Composition"], [3, 1, 1, "", "CostLinear"], [3, 1, 1, "", "CostMixNorm21"], [3, 1, 1, "", "CostMixNorm21NonNeg"], [3, 1, 1, "", "CostMixNormSchatt1"], [3, 1, 1, "", "CostRobustPenalization"], [3, 1, 1, "", "CostTV"], [3, 0, 1, "", "IndicatorFunctions"], [3, 0, 0, "-", "IndicatorFunctions"]], "Cost.CostConst": [[3, 2, 1, "", "applyGrad_"], [3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"]], "Cost.CostGoodRoughness": [[3, 2, 1, "", "applyGrad_"], [3, 2, 1, "", "apply_"]], "Cost.CostHyperBolic": [[3, 2, 1, "", "applyGrad_"], [3, 2, 1, "", "apply_"]], "Cost.CostKullLeib": [[3, 2, 1, "", "applyGrad_"], [3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"]], "Cost.CostL1": [[3, 2, 1, "", "applyGrad_"], [3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"]], "Cost.CostL2": [[3, 2, 1, "", "applyGrad_"], [3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"], [3, 2, 1, "", "makeComposition_"]], "Cost.CostL2Composition": [[3, 2, 1, "", "applyGrad_"], [3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"], [3, 2, 1, "", "makeComposition_"]], "Cost.CostLinear": [[3, 2, 1, "", "applyGrad_"], [3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"]], "Cost.CostMixNorm21": [[3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"], [3, 2, 1, "", "makeComposition_"]], "Cost.CostMixNorm21NonNeg": [[3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"]], "Cost.CostMixNormSchatt1": [[3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"]], "Cost.CostRobustPenalization": [[3, 2, 1, "", "applyGrad_"], [3, 2, 1, "", "apply_"]], "Cost.CostTV": [[3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "setProxAlgo"]], "Cost.IndicatorFunctions": [[3, 1, 1, "", "CostComplexCircle"], [3, 1, 1, "", "CostComplexDisk"], [3, 1, 1, "", "CostComplexRing"], [3, 1, 1, "", "CostIndicator"], [3, 1, 1, "", "CostNonNeg"], [3, 1, 1, "", "CostReals"], [3, 1, 1, "", "CostRectangle"]], "Cost.IndicatorFunctions.CostComplexRing": [[3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"]], "Cost.IndicatorFunctions.CostRectangle": [[3, 2, 1, "", "applyProx_"], [3, 2, 1, "", "apply_"]], "LinOp": [[10, 1, 1, "", "LinOpBroadcast"], [10, 1, 1, "", "LinOpBroadcastMatrix"], [10, 1, 1, "", "LinOpConv"], [10, 1, 1, "", "LinOpDCT"], [10, 1, 1, "", "LinOpDiag"], [10, 1, 1, "", "LinOpGrad"], [10, 1, 1, "", "LinOpHess"], [10, 1, 1, "", "LinOpMatrix"], [10, 1, 1, "", "LinOpSDFT"], [10, 1, 1, "", "LinOpShape"], [10, 1, 1, "", "LinOpSum"], [10, 1, 1, "", "LinOpXRay"], [10, 0, 1, "", "SelectorLinOps"], [10, 0, 0, "-", "SelectorLinOps"]], "LinOp.LinOpBroadcast": [[10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHtH_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeAdjoint_"], [10, 2, 1, "", "makeHtH_"]], "LinOp.LinOpBroadcastMatrix": [[10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHHt_"], [10, 2, 1, "", "applyHtH_"], [10, 2, 1, "", "applyInverse_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeAdjoint_"], [10, 2, 1, "", "makeComposition_"], [10, 2, 1, "", "makeHHt_"], [10, 2, 1, "", "makeHtH_"], [10, 2, 1, "", "makeInversion_"], [10, 2, 1, "", "plus_"]], "LinOp.LinOpConv": [[10, 2, 1, "", "applyAdjointInverse_"], [10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHHt_"], [10, 2, 1, "", "applyHtH_"], [10, 2, 1, "", "applyInverse_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeAdjoint_"], [10, 2, 1, "", "makeComposition_"], [10, 2, 1, "", "makeHHt_"], [10, 2, 1, "", "makeHtH_"], [10, 2, 1, "", "makeInversion_"], [10, 2, 1, "", "plus_"]], "LinOp.LinOpDCT": [[10, 2, 1, "", "applyAdjointInverse_"], [10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHHt_"], [10, 2, 1, "", "applyHtH_"], [10, 2, 1, "", "applyInverse_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeHHt_"], [10, 2, 1, "", "makeHtH_"], [10, 2, 1, "", "makeInversion_"]], "LinOp.LinOpDiag": [[10, 2, 1, "", "applyAdjointInverse_"], [10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHHt_"], [10, 2, 1, "", "applyHtH_"], [10, 2, 1, "", "applyInverse_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeAdjoint_"], [10, 2, 1, "", "makeComposition_"], [10, 2, 1, "", "makeHHt_"], [10, 2, 1, "", "makeHtH_"], [10, 2, 1, "", "makeInversion_"], [10, 2, 1, "", "mpower_"], [10, 2, 1, "", "plus_"]], "LinOp.LinOpGrad": [[10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHtH_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeHtH_"]], "LinOp.LinOpHess": [[10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeHtH_"]], "LinOp.LinOpMatrix": [[10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "apply_"]], "LinOp.LinOpSDFT": [[10, 2, 1, "", "applyAdjointInverse_"], [10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHHt_"], [10, 2, 1, "", "applyHtH_"], [10, 2, 1, "", "applyInverse_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeHHt_"], [10, 2, 1, "", "makeHtH_"], [10, 2, 1, "", "makeInversion_"]], "LinOp.LinOpShape": [[10, 2, 1, "", "applyAdjointInverse_"], [10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHHt_"], [10, 2, 1, "", "applyHtH_"], [10, 2, 1, "", "applyInverse_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeHHt_"], [10, 2, 1, "", "makeHtH_"]], "LinOp.LinOpSum": [[10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHHt_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeAdjoint_"], [10, 2, 1, "", "makeComposition_"], [10, 2, 1, "", "makeHHt_"]], "LinOp.LinOpXRay": [[10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHtH_"], [10, 2, 1, "", "apply_"]], "LinOp.SelectorLinOps": [[10, 1, 1, "", "LinOpDownsample"], [10, 1, 1, "", "LinOpSelector"], [10, 1, 1, "", "LinOpSelectorPatch"]], "LinOp.SelectorLinOps.LinOpDownsample": [[10, 2, 1, "", "makeComposition_"]], "LinOp.SelectorLinOps.LinOpSelector": [[10, 2, 1, "", "applyAdjoint_"], [10, 2, 1, "", "applyHHt_"], [10, 2, 1, "", "applyHtH_"], [10, 2, 1, "", "apply_"], [10, 2, 1, "", "makeHHt_"], [10, 2, 1, "", "makeHtH_"]], "NonLinOp": [[12, 0, 1, "", "ElementWiseOp"], [12, 0, 0, "-", "ElementWiseOp"]], "NonLinOp.ElementWiseOp": [[12, 1, 1, "", "OpEWAbs"], [12, 1, 1, "", "OpEWInverse"], [12, 1, 1, "", "OpEWSqrt"], [12, 1, 1, "", "OpEWSquaredMagnitude"], [12, 1, 1, "", "OpEWfunc"]], "NonLinOp.ElementWiseOp.OpEWAbs": [[12, 2, 1, "", "applyJacobianT_"], [12, 2, 1, "", "apply_"]], "NonLinOp.ElementWiseOp.OpEWInverse": [[12, 2, 1, "", "applyJacobianT_"], [12, 2, 1, "", "apply_"]], "NonLinOp.ElementWiseOp.OpEWSqrt": [[12, 2, 1, "", "applyJacobianT_"], [12, 2, 1, "", "apply_"]], "NonLinOp.ElementWiseOp.OpEWSquaredMagnitude": [[12, 2, 1, "", "applyJacobianT_"], [12, 2, 1, "", "apply_"]], "NonLinOp.ElementWiseOp.OpEWfunc": [[12, 2, 1, "", "applyInverse_"], [12, 2, 1, "", "applyJacobianT_"], [12, 2, 1, "", "apply_"]], "Opti": [[13, 1, 1, "", "OptiADMM"], [13, 1, 1, "", "OptiChambPock"], [13, 1, 1, "", "OptiConjGrad"], [13, 1, 1, "", "OptiDouglasRachford"], [13, 1, 1, "", "OptiFBS"], [13, 1, 1, "", "OptiFGP"], [13, 1, 1, "", "OptiGradDsct"], [13, 1, 1, "", "OptiPrimalDualCondat"], [13, 1, 1, "", "OptiRichLucy"], [13, 1, 1, "", "OptiVMLMB"], [13, 0, 1, "", "OutputOpti"], [13, 0, 0, "-", "OutputOpti"], [13, 0, 1, "", "TestCvg"], [13, 0, 0, "-", "TestCvg"]], "Opti.OptiADMM": [[13, 2, 1, "", "doIteration"], [13, 2, 1, "", "initialize"]], "Opti.OptiChambPock": [[13, 2, 1, "", "doIteration"], [13, 2, 1, "", "initialize"]], "Opti.OptiConjGrad": [[13, 2, 1, "", "doIteration"], [13, 2, 1, "", "initialize"]], "Opti.OptiDouglasRachford": [[13, 2, 1, "", "doIteration"], [13, 2, 1, "", "initialize"]], "Opti.OptiFBS": [[13, 2, 1, "", "doIteration"], [13, 2, 1, "", "initialize"]], "Opti.OptiFGP": [[13, 2, 1, "", "doIteration"], [13, 2, 1, "", "initialize"], [13, 2, 1, "", "setBounds"], [13, 2, 1, "", "setLambda"]], "Opti.OptiGradDsct": [[13, 2, 1, "", "doIteration"], [13, 2, 1, "", "initialize"]], "Opti.OptiPrimalDualCondat": [[13, 2, 1, "", "doIteration"], [13, 2, 1, "", "initialize"]], "Opti.OptiRichLucy": [[13, 2, 1, "", "doIteration"], [13, 2, 1, "", "initialize"]], "Opti.OptiVMLMB": [[13, 2, 1, "", "doIteration"], [13, 2, 1, "", "initialize"]], "Opti.OutputOpti": [[13, 1, 1, "", "OutputOpti"], [13, 1, 1, "", "OutputOptiConjGrad"]], "Opti.OutputOpti.OutputOpti": [[13, 2, 1, "", "computeCost"], [13, 2, 1, "", "init"], [13, 2, 1, "", "update"]], "Opti.OutputOpti.OutputOptiConjGrad": [[13, 2, 1, "", "computeCost"]], "Opti.TestCvg": [[13, 1, 1, "", "TestCvg"], [13, 1, 1, "", "TestCvgADMM"], [13, 1, 1, "", "TestCvgCombine"], [13, 1, 1, "", "TestCvgCostAbsolute"], [13, 1, 1, "", "TestCvgCostRelative"], [13, 1, 1, "", "TestCvgMaxSnr"], [13, 1, 1, "", "TestCvgStepRelative"]], "Opti.TestCvg.TestCvg": [[13, 2, 1, "", "testConvergence"]], "Opti.TestCvg.TestCvgADMM": [[13, 2, 1, "", "testConvergence"]], "Opti.TestCvg.TestCvgCombine": [[13, 2, 1, "", "testConvergence"]], "Opti.TestCvg.TestCvgCostAbsolute": [[13, 2, 1, "", "testConvergence"]], "Opti.TestCvg.TestCvgCostRelative": [[13, 2, 1, "", "testConvergence"]], "Opti.TestCvg.TestCvgMaxSnr": [[13, 2, 1, "", "testConvergence"]], "Opti.TestCvg.TestCvgStepRelative": [[13, 2, 1, "", "testConvergence"]]}, "objtypes": {"0": "mat:module", "1": "mat:class", "2": "mat:method"}, "objnames": {"0": ["mat", "module", "MATLAB module"], "1": ["mat", "class", "MATLAB class"], "2": ["mat", "method", "MATLAB method"]}, "titleterms": {"abstract": 0, "class": [0, 9], "map": [0, 11, 14], "linop": [0, 10, 11, 14], "cost": [0, 3, 7, 11, 14], "opti": [0, 11, 13, 14], "operationsonmap": 0, "mapcomposit": 0, "mapinvers": 0, "mapsumm": 0, "mapmultipl": 0, "linopadjoint": 0, "linopcomposit": 0, "linopinvers": 0, "linopsumm": 0, "costcomposit": 0, "costmultipl": 0, "costsumm": 0, "costpartialsumm": 0, "condit": 1, "us": 1, "contact": 2, "function": [3, 6, 7], "costconst": 3, "costgoodrough": 3, "costhyperbol": 3, "costkullleib": 3, "costlinear": 3, "costl1": 3, "costl2": 3, "costl2composit": 3, "costmixnorm21": 3, "costmixnorm21nonneg": 3, "costmixnormschatt1": 3, "costrobustpen": 3, "costtv": 3, "indicatorfunct": 3, "costind": 3, "costrectangl": 3, "costreal": 3, "costnonneg": 3, "costcomplexr": 3, "costcomplexcircl": 3, "costcomplexdisk": 3, "exampl": [4, 6], "3d": 4, "deconvolut": 4, "speedup": 6, "gpu": 6, "main": [6, 7], "which": 6, "gener": [6, 8, 9], "data": 6, "concret": 6, "graphic": 7, "user": 7, "interfac": [7, 9], "gui": 7, "demo": 7, "video": 7, "panel": 7, "descript": 7, "forward": 7, "model": 7, "optim": [7, 13], "dialog": 7, "box": 7, "set": 7, "paramet": 7, "window": 7, "log": 7, "check": 7, "pipelin": 7, "recap": 7, "welcom": 8, "globalbioim": 8, "librari": 8, "webpag": 8, "releas": 8, "refer": 8, "acknowledg": 8, "content": 8, "technic": 8, "document": 8, "link": 8, "import": 9, "inform": 9, "philosophi": 9, "hierarchi": 9, "method": [9, 11], "core": 9, "memoiz": 9, "precomput": 9, "option": 9, "composit": 9, "deep": 9, "copi": 9, "auxiliari": 9, "util": 9, "provid": 9, "templat": 9, "linear": [10, 12], "oper": [10, 12], "linopbroadcast": 10, "linopbroadcastmatrix": 10, "linopconv": 10, "linopdiag": 10, "linopdct": 10, "linopgrad": 10, "linophess": 10, "linopmatrix": 10, "linopsdft": 10, "linopshap": 10, "linopsum": 10, "linopxrai": 10, "selectorlinop": 10, "linopselector": 10, "linopdownsampl": 10, "linopselectorpatch": 10, "list": [11, 14], "non": 12, "element": 12, "wise": 12, "opewab": 12, "opewfunc": 12, "opewinvers": 12, "opewsqrt": 12, "opewsquaredmagnitud": 12, "algorithm": 13, "optiadmm": 13, "optichambpock": 13, "opticonjgrad": 13, "optidouglasrachford": 13, "optifb": 13, "optifgp": 13, "optigraddsct": 13, "optiprimaldualcondat": 13, "optirichluci": 13, "optivmlmb": 13, "outputopti": 13, "default": 13, "outputopticonjgrad": 13, "testcvg": 13, "testcvgcombin": 13, "testcvgcostabsolut": 13, "testcvgcostrel": 13, "testcvgsteprel": 13, "testcvgmaxsnr": 13, "testcvgadmm": 13, "properti": 14, "relat": 15, "paper": 15, "open": 15, "sourc": 15, "code": 15, "other": 15}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Conditions of Use": [[1, "conditions-of-use"]], "Contact": [[2, "contact"]], "Examples": [[4, "examples"]], "3D Deconvolution": [[4, "d-deconvolution"]], "Speedup with GPU": [[6, "speedup-with-gpu"]], "Main functions": [[6, "main-functions"]], "Functions which generate data": [[6, "functions-which-generate-data"]], "Concrete example": [[6, "concrete-example"]], "Welcome to the GlobalBioIm Library Webpage": [[8, "welcome-to-the-globalbioim-library-webpage"]], "Releases": [[8, "releases"]], "Reference": [[8, "reference"]], "Acknowledgements": [[8, "acknowledgements"]], "Contents": [[8, "contents"]], "General": [[8, null]], "Technical Documentation": [[8, null]], "Links": [[8, null]], "Important Information": [[9, "important-information"]], "General Philosophy": [[9, "general-philosophy"]], "Hierarchy of Classes": [[9, "hierarchy-of-classes"]], "Interface Methods and Core Methods": [[9, "interface-methods-and-core-methods"]], "Memoize and Precomputation Options": [[9, "memoize-and-precomputation-options"]], "Compositions": [[9, "compositions"]], "Deep Copy": [[9, "deep-copy"]], "Auxiliary Utilities": [[9, "auxiliary-utilities"]], "Provided Templates": [[9, "provided-templates"]], "Map": [[11, "map"], [14, "map"], [0, "map"]], "LinOp": [[11, "linop"], [14, "linop"], [0, "linop"]], "Cost": [[11, "cost"], [14, "cost"], [0, "cost"]], "Opti": [[11, "opti"], [14, "opti"], [0, "opti"]], "List of Methods": [[11, "list-of-methods"]], "List of Properties": [[14, "list-of-properties"]], "Related Papers": [[15, "related-papers"]], "Papers with open-source code": [[15, "papers-with-open-source-code"]], "Other papers": [[15, "other-papers"]], "Abstract Classes": [[0, "abstract-classes"]], "OperationsOnMaps": [[0, "module-Abstract.OperationsOnMaps"]], "MapComposition": [[0, "mapcomposition"]], "MapInversion": [[0, "mapinversion"]], "MapSummation": [[0, "mapsummation"]], "MapMultiplication": [[0, "mapmultiplication"]], "LinOpAdjoint": [[0, "linopadjoint"]], "LinOpComposition": [[0, "linopcomposition"]], "LinOpInversion": [[0, "linopinversion"]], "LinOpSummation": [[0, "linopsummation"]], "CostComposition": [[0, "costcomposition"]], "CostMultiplication": [[0, "costmultiplication"]], "CostSummation": [[0, "costsummation"]], "CostPartialSummation": [[0, "costpartialsummation"]], "Cost Functions (Cost)": [[3, "cost-functions-cost"]], "CostConst": [[3, "costconst"]], "CostGoodRoughness": [[3, "costgoodroughness"]], "CostHyperBolic": [[3, "costhyperbolic"]], "CostKullLeib": [[3, "costkullleib"]], "CostLinear": [[3, "costlinear"]], "CostL1": [[3, "costl1"]], "CostL2": [[3, "costl2"]], "CostL2Composition": [[3, "costl2composition"]], "CostMixNorm21": [[3, "costmixnorm21"]], "CostMixNorm21NonNeg": [[3, "costmixnorm21nonneg"]], "CostMixNormSchatt1": [[3, "costmixnormschatt1"]], "CostRobustPenalization": [[3, "costrobustpenalization"]], "CostTV": [[3, "costtv"]], "IndicatorFunctions": [[3, "indicatorfunctions"]], "CostIndicator": [[3, "costindicator"]], "CostRectangle": [[3, "costrectangle"]], "CostReals": [[3, "costreals"]], "CostNonNeg": [[3, "costnonneg"]], "CostComplexRing": [[3, "costcomplexring"]], "CostComplexCircle": [[3, "costcomplexcircle"]], "CostComplexDisk": [[3, "costcomplexdisk"]], "Graphical User Interface (GUI)": [[7, "graphical-user-interface-gui"]], "Demo Video": [[7, "demo-video"]], "Panels Description": [[7, "panels-description"]], "Main Panel": [[7, "main-panel"]], "Forward-Model Panel": [[7, "forward-model-panel"]], "Cost Function Panel": [[7, "cost-function-panel"]], "Optimization Panel": [[7, "optimization-panel"]], "Dialog Boxes": [[7, "dialog-boxes"]], "Set Parameters Window": [[7, "set-parameters-window"]], "Log Window (Check Pipeline)": [[7, "log-window-check-pipeline"]], "Recap Parameters Window": [[7, "recap-parameters-window"]], "Linear Operators (LinOp)": [[10, "linear-operators-linop"]], "LinOpBroadcast": [[10, "linopbroadcast"]], "LinOpBroadcastMatrix": [[10, "linopbroadcastmatrix"]], "LinOpConv": [[10, "linopconv"]], "LinOpDiag": [[10, "linopdiag"]], "LinOpDCT": [[10, "linopdct"]], "LinOpGrad": [[10, "linopgrad"]], "LinOpHess": [[10, "linophess"]], "LinOpMatrix": [[10, "linopmatrix"]], "LinOpSDFT": [[10, "linopsdft"]], "LinOpShape": [[10, "linopshape"]], "LinOpSum": [[10, "linopsum"]], "LinOpXRay": [[10, "linopxray"]], "SelectorLinOps": [[10, "selectorlinops"]], "LinOpSelector": [[10, "linopselector"]], "LinOpDownsample": [[10, "linopdownsample"]], "LinOpSelectorPatch": [[10, "linopselectorpatch"]], "Non-Linear Operators": [[12, "non-linear-operators"]], "Element-wise Operators": [[12, "element-wise-operators"]], "OpEWAbs": [[12, "opewabs"]], "OpEWfunc": [[12, "opewfunc"]], "OpEWInverse": [[12, "opewinverse"]], "OpEWSqrt": [[12, "opewsqrt"]], "OpEWSquaredMagnitude": [[12, "opewsquaredmagnitude"]], "Optimization Algorithms (Opti)": [[13, "optimization-algorithms-opti"]], "OptiADMM": [[13, "optiadmm"]], "OptiChambPock": [[13, "optichambpock"]], "OptiConjGrad": [[13, "opticonjgrad"]], "OptiDouglasRachford": [[13, "optidouglasrachford"]], "OptiFBS": [[13, "optifbs"]], "OptiFGP": [[13, "optifgp"]], "OptiGradDsct": [[13, "optigraddsct"]], "OptiPrimalDualCondat": [[13, "optiprimaldualcondat"]], "OptiRichLucy": [[13, "optirichlucy"]], "OptiVMLMB": [[13, "optivmlmb"]], "OutputOpti": [[13, "outputopti"]], "OutputOpti (Default)": [[13, "outputopti-default"]], "OutputOptiConjGrad": [[13, "outputopticonjgrad"]], "TestCvg": [[13, "testcvg"]], "TestCvg (Default)": [[13, "testcvg-default"]], "TestCvgCombine": [[13, "testcvgcombine"]], "TestCvgCostAbsolute": [[13, "testcvgcostabsolute"]], "TestCvgCostRelative": [[13, "testcvgcostrelative"]], "TestCvgStepRelative": [[13, "testcvgsteprelative"]], "TestCvgMaxSnr": [[13, "testcvgmaxsnr"]], "TestCvgADMM": [[13, "testcvgadmm"]]}, "indexentries": {"abstract (module)": [[0, "module-Abstract"]], "abstract.operationsonmaps (module)": [[0, "module-Abstract.OperationsOnMaps"]], "cost (class in abstract)": [[0, "Abstract.Cost"]], "costcomposition (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.CostComposition"]], "costmultiplication (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.CostMultiplication"]], "costpartialsummation (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.CostPartialSummation"]], "costsummation (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.CostSummation"]], "linop (class in abstract)": [[0, "Abstract.LinOp"]], "linopadjoint (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.LinOpAdjoint"]], "linopcomposition (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.LinOpComposition"]], "linopinversion (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.LinOpInversion"]], "linopsummation (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.LinOpSummation"]], "map (class in abstract)": [[0, "Abstract.Map"]], "mapcomposition (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.MapComposition"]], "mapinversion (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.MapInversion"]], "mapmultiplication (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.MapMultiplication"]], "mapsummation (class in abstract.operationsonmaps)": [[0, "Abstract.OperationsOnMaps.MapSummation"]], "opti (class in abstract)": [[0, "Abstract.Opti"]], "apply() (abstract.map method)": [[0, "Abstract.Map.apply"]], "applyadjoint() (abstract.linop method)": [[0, "Abstract.LinOp.applyAdjoint"]], "applyadjointinverse() (abstract.linop method)": [[0, "Abstract.LinOp.applyAdjointInverse"]], "applyadjointinverse_() (abstract.linop method)": [[0, "Abstract.LinOp.applyAdjointInverse_"]], "applyadjointinverse_() (abstract.operationsonmaps.linopadjoint method)": [[0, "Abstract.OperationsOnMaps.LinOpAdjoint.applyAdjointInverse_"]], "applyadjointinverse_() (abstract.operationsonmaps.linopcomposition method)": [[0, "Abstract.OperationsOnMaps.LinOpComposition.applyAdjointInverse_"]], "applyadjointinverse_() (abstract.operationsonmaps.linopinversion method)": [[0, "Abstract.OperationsOnMaps.LinOpInversion.applyAdjointInverse_"]], "applyadjoint_() (abstract.linop method)": [[0, "Abstract.LinOp.applyAdjoint_"]], "applyadjoint_() (abstract.operationsonmaps.linopadjoint method)": [[0, "Abstract.OperationsOnMaps.LinOpAdjoint.applyAdjoint_"]], "applyadjoint_() (abstract.operationsonmaps.linopcomposition method)": [[0, "Abstract.OperationsOnMaps.LinOpComposition.applyAdjoint_"]], "applyadjoint_() (abstract.operationsonmaps.linopinversion method)": [[0, "Abstract.OperationsOnMaps.LinOpInversion.applyAdjoint_"]], "applyadjoint_() (abstract.operationsonmaps.linopsummation method)": [[0, "Abstract.OperationsOnMaps.LinOpSummation.applyAdjoint_"]], "applygrad() (abstract.cost method)": [[0, "Abstract.Cost.applyGrad"]], "applygrad_() (abstract.cost method)": [[0, "Abstract.Cost.applyGrad_"]], "applygrad_() (abstract.operationsonmaps.costcomposition method)": [[0, "Abstract.OperationsOnMaps.CostComposition.applyGrad_"]], "applygrad_() (abstract.operationsonmaps.costmultiplication method)": [[0, "Abstract.OperationsOnMaps.CostMultiplication.applyGrad_"]], "applygrad_() (abstract.operationsonmaps.costpartialsummation method)": [[0, "Abstract.OperationsOnMaps.CostPartialSummation.applyGrad_"]], "applygrad_() (abstract.operationsonmaps.costsummation method)": [[0, "Abstract.OperationsOnMaps.CostSummation.applyGrad_"]], "applyhht() (abstract.linop method)": [[0, "Abstract.LinOp.applyHHt"]], "applyhht_() (abstract.linop method)": [[0, "Abstract.LinOp.applyHHt_"]], "applyhht_() (abstract.operationsonmaps.linopadjoint method)": [[0, "Abstract.OperationsOnMaps.LinOpAdjoint.applyHHt_"]], "applyhht_() (abstract.operationsonmaps.linopcomposition method)": [[0, "Abstract.OperationsOnMaps.LinOpComposition.applyHHt_"]], "applyhth() (abstract.linop method)": [[0, "Abstract.LinOp.applyHtH"]], "applyhth_() (abstract.linop method)": [[0, "Abstract.LinOp.applyHtH_"]], "applyhth_() (abstract.operationsonmaps.linopadjoint method)": [[0, "Abstract.OperationsOnMaps.LinOpAdjoint.applyHtH_"]], "applyhth_() (abstract.operationsonmaps.linopcomposition method)": [[0, "Abstract.OperationsOnMaps.LinOpComposition.applyHtH_"]], "applyinverse() (abstract.map method)": [[0, "Abstract.Map.applyInverse"]], "applyinverse_() (abstract.map method)": [[0, "Abstract.Map.applyInverse_"]], "applyinverse_() (abstract.operationsonmaps.linopadjoint method)": [[0, "Abstract.OperationsOnMaps.LinOpAdjoint.applyInverse_"]], "applyinverse_() (abstract.operationsonmaps.mapcomposition method)": [[0, "Abstract.OperationsOnMaps.MapComposition.applyInverse_"]], "applyinverse_() (abstract.operationsonmaps.mapinversion method)": [[0, "Abstract.OperationsOnMaps.MapInversion.applyInverse_"]], "applyjacobiant() (abstract.map method)": [[0, "Abstract.Map.applyJacobianT"]], "applyjacobiant_() (abstract.cost method)": [[0, "Abstract.Cost.applyJacobianT_"]], "applyjacobiant_() (abstract.linop method)": [[0, "Abstract.LinOp.applyJacobianT_"]], "applyjacobiant_() (abstract.map method)": [[0, "Abstract.Map.applyJacobianT_"]], "applyjacobiant_() (abstract.operationsonmaps.mapcomposition method)": [[0, "Abstract.OperationsOnMaps.MapComposition.applyJacobianT_"]], "applyjacobiant_() (abstract.operationsonmaps.mapmultiplication method)": [[0, "Abstract.OperationsOnMaps.MapMultiplication.applyJacobianT_"]], "applyjacobiant_() (abstract.operationsonmaps.mapsummation method)": [[0, "Abstract.OperationsOnMaps.MapSummation.applyJacobianT_"]], "applyprox() (abstract.cost method)": [[0, "Abstract.Cost.applyProx"]], "applyproxfench() (abstract.cost method)": [[0, "Abstract.Cost.applyProxFench"]], "applyproxfench_() (abstract.cost method)": [[0, "Abstract.Cost.applyProxFench_"]], "applyprox_() (abstract.cost method)": [[0, "Abstract.Cost.applyProx_"]], "applyprox_() (abstract.operationsonmaps.costcomposition method)": [[0, "Abstract.OperationsOnMaps.CostComposition.applyProx_"]], "applyprox_() (abstract.operationsonmaps.costmultiplication method)": [[0, "Abstract.OperationsOnMaps.CostMultiplication.applyProx_"]], "applyprox_() (abstract.operationsonmaps.costsummation method)": [[0, "Abstract.OperationsOnMaps.CostSummation.applyProx_"]], "apply_() (abstract.map method)": [[0, "Abstract.Map.apply_"]], "apply_() (abstract.operationsonmaps.costmultiplication method)": [[0, "Abstract.OperationsOnMaps.CostMultiplication.apply_"]], "apply_() (abstract.operationsonmaps.costpartialsummation method)": [[0, "Abstract.OperationsOnMaps.CostPartialSummation.apply_"]], "apply_() (abstract.operationsonmaps.linopadjoint method)": [[0, "Abstract.OperationsOnMaps.LinOpAdjoint.apply_"]], "apply_() (abstract.operationsonmaps.linopcomposition method)": [[0, "Abstract.OperationsOnMaps.LinOpComposition.apply_"]], "apply_() (abstract.operationsonmaps.mapcomposition method)": [[0, "Abstract.OperationsOnMaps.MapComposition.apply_"]], "apply_() (abstract.operationsonmaps.mapinversion method)": [[0, "Abstract.OperationsOnMaps.MapInversion.apply_"]], "apply_() (abstract.operationsonmaps.mapmultiplication method)": [[0, "Abstract.OperationsOnMaps.MapMultiplication.apply_"]], "apply_() (abstract.operationsonmaps.mapsummation method)": [[0, "Abstract.OperationsOnMaps.MapSummation.apply_"]], "copyelement() (abstract.map method)": [[0, "Abstract.Map.copyElement"]], "ctranspose() (abstract.linop method)": [[0, "Abstract.LinOp.ctranspose"]], "doiteration() (abstract.opti method)": [[0, "Abstract.Opti.doIteration"]], "ending_verb() (abstract.opti method)": [[0, "Abstract.Opti.ending_verb"]], "initialize() (abstract.opti method)": [[0, "Abstract.Opti.initialize"]], "makeadjoint_() (abstract.linop method)": [[0, "Abstract.LinOp.makeAdjoint_"]], "makeadjoint_() (abstract.operationsonmaps.linopadjoint method)": [[0, "Abstract.OperationsOnMaps.LinOpAdjoint.makeAdjoint_"]], "makeadjoint_() (abstract.operationsonmaps.linopcomposition method)": [[0, "Abstract.OperationsOnMaps.LinOpComposition.makeAdjoint_"]], "makeadjoint_() (abstract.operationsonmaps.linopsummation method)": [[0, "Abstract.OperationsOnMaps.LinOpSummation.makeAdjoint_"]], "makecomposition() (abstract.map method)": [[0, "Abstract.Map.makeComposition"]], "makecomposition_() (abstract.cost method)": [[0, "Abstract.Cost.makeComposition_"]], "makecomposition_() (abstract.linop method)": [[0, "Abstract.LinOp.makeComposition_"]], "makecomposition_() (abstract.map method)": [[0, "Abstract.Map.makeComposition_"]], "makecomposition_() (abstract.operationsonmaps.costcomposition method)": [[0, "Abstract.OperationsOnMaps.CostComposition.makeComposition_"]], "makecomposition_() (abstract.operationsonmaps.costmultiplication method)": [[0, "Abstract.OperationsOnMaps.CostMultiplication.makeComposition_"]], "makecomposition_() (abstract.operationsonmaps.linopcomposition method)": [[0, "Abstract.OperationsOnMaps.LinOpComposition.makeComposition_"]], "makecomposition_() (abstract.operationsonmaps.linopinversion method)": [[0, "Abstract.OperationsOnMaps.LinOpInversion.makeComposition_"]], "makecomposition_() (abstract.operationsonmaps.mapcomposition method)": [[0, "Abstract.OperationsOnMaps.MapComposition.makeComposition_"]], "makecomposition_() (abstract.operationsonmaps.mapinversion method)": [[0, "Abstract.OperationsOnMaps.MapInversion.makeComposition_"]], "makecomposition_() (abstract.operationsonmaps.mapmultiplication method)": [[0, "Abstract.OperationsOnMaps.MapMultiplication.makeComposition_"]], "makecomposition_() (abstract.operationsonmaps.mapsummation method)": [[0, "Abstract.OperationsOnMaps.MapSummation.makeComposition_"]], "makehht() (abstract.linop method)": [[0, "Abstract.LinOp.makeHHt"]], "makehht_() (abstract.linop method)": [[0, "Abstract.LinOp.makeHHt_"]], "makehht_() (abstract.operationsonmaps.linopadjoint method)": [[0, "Abstract.OperationsOnMaps.LinOpAdjoint.makeHHt_"]], "makehht_() (abstract.operationsonmaps.linopcomposition method)": [[0, "Abstract.OperationsOnMaps.LinOpComposition.makeHHt_"]], "makehth() (abstract.linop method)": [[0, "Abstract.LinOp.makeHtH"]], "makehth_() (abstract.linop method)": [[0, "Abstract.LinOp.makeHtH_"]], "makehth_() (abstract.operationsonmaps.linopadjoint method)": [[0, "Abstract.OperationsOnMaps.LinOpAdjoint.makeHtH_"]], "makehth_() (abstract.operationsonmaps.linopcomposition method)": [[0, "Abstract.OperationsOnMaps.LinOpComposition.makeHtH_"]], "makeinversion_() (abstract.linop method)": [[0, "Abstract.LinOp.makeInversion_"]], "makepartialsummation() (abstract.operationsonmaps.costsummation method)": [[0, "Abstract.OperationsOnMaps.CostSummation.makePartialSummation"]], "minus() (abstract.map method)": [[0, "Abstract.Map.minus"]], "minus_() (abstract.cost method)": [[0, "Abstract.Cost.minus_"]], "minus_() (abstract.map method)": [[0, "Abstract.Map.minus_"]], "mpower() (abstract.map method)": [[0, "Abstract.Map.mpower"]], "mpower_() (abstract.map method)": [[0, "Abstract.Map.mpower_"]], "mpower_() (abstract.operationsonmaps.linopinversion method)": [[0, "Abstract.OperationsOnMaps.LinOpInversion.mpower_"]], "mpower_() (abstract.operationsonmaps.mapinversion method)": [[0, "Abstract.OperationsOnMaps.MapInversion.mpower_"]], "mtimes() (abstract.map method)": [[0, "Abstract.Map.mtimes"]], "plus() (abstract.map method)": [[0, "Abstract.Map.plus"]], "plus_() (abstract.cost method)": [[0, "Abstract.Cost.plus_"]], "plus_() (abstract.linop method)": [[0, "Abstract.LinOp.plus_"]], "plus_() (abstract.map method)": [[0, "Abstract.Map.plus_"]], "plus_() (abstract.operationsonmaps.linopsummation method)": [[0, "Abstract.OperationsOnMaps.LinOpSummation.plus_"]], "run() (abstract.opti method)": [[0, "Abstract.Opti.run"]], "setlsub() (abstract.operationsonmaps.costpartialsummation method)": [[0, "Abstract.OperationsOnMaps.CostPartialSummation.setLsub"]], "set_y() (abstract.cost method)": [[0, "Abstract.Cost.set_y"]], "set_y() (abstract.operationsonmaps.costcomposition method)": [[0, "Abstract.OperationsOnMaps.CostComposition.set_y"]], "starting_verb() (abstract.opti method)": [[0, "Abstract.Opti.starting_verb"]], "times() (abstract.map method)": [[0, "Abstract.Map.times"]], "times_() (abstract.map method)": [[0, "Abstract.Map.times_"]], "transpose() (abstract.linop method)": [[0, "Abstract.LinOp.transpose"]], "updateparams() (abstract.opti method)": [[0, "Abstract.Opti.updateParams"]], "cost (module)": [[3, "module-Cost"]], "cost.indicatorfunctions (module)": [[3, "module-Cost.IndicatorFunctions"]], "costcomplexcircle (class in cost.indicatorfunctions)": [[3, "Cost.IndicatorFunctions.CostComplexCircle"]], "costcomplexdisk (class in cost.indicatorfunctions)": [[3, "Cost.IndicatorFunctions.CostComplexDisk"]], "costcomplexring (class in cost.indicatorfunctions)": [[3, "Cost.IndicatorFunctions.CostComplexRing"]], "costconst (class in cost)": [[3, "Cost.CostConst"]], "costgoodroughness (class in cost)": [[3, "Cost.CostGoodRoughness"]], "costhyperbolic (class in cost)": [[3, "Cost.CostHyperBolic"]], "costindicator (class in cost.indicatorfunctions)": [[3, "Cost.IndicatorFunctions.CostIndicator"]], "costkullleib (class in cost)": [[3, "Cost.CostKullLeib"]], "costl1 (class in cost)": [[3, "Cost.CostL1"]], "costl2 (class in cost)": [[3, "Cost.CostL2"]], "costl2composition (class in cost)": [[3, "Cost.CostL2Composition"]], "costlinear (class in cost)": [[3, "Cost.CostLinear"]], "costmixnorm21 (class in cost)": [[3, "Cost.CostMixNorm21"]], "costmixnorm21nonneg (class in cost)": [[3, "Cost.CostMixNorm21NonNeg"]], "costmixnormschatt1 (class in cost)": [[3, "Cost.CostMixNormSchatt1"]], "costnonneg (class in cost.indicatorfunctions)": [[3, "Cost.IndicatorFunctions.CostNonNeg"]], "costreals (class in cost.indicatorfunctions)": [[3, "Cost.IndicatorFunctions.CostReals"]], "costrectangle (class in cost.indicatorfunctions)": [[3, "Cost.IndicatorFunctions.CostRectangle"]], "costrobustpenalization (class in cost)": [[3, "Cost.CostRobustPenalization"]], "costtv (class in cost)": [[3, "Cost.CostTV"]], "applygrad_() (cost.costconst method)": [[3, "Cost.CostConst.applyGrad_"]], "applygrad_() (cost.costgoodroughness method)": [[3, "Cost.CostGoodRoughness.applyGrad_"]], "applygrad_() (cost.costhyperbolic method)": [[3, "Cost.CostHyperBolic.applyGrad_"]], "applygrad_() (cost.costkullleib method)": [[3, "Cost.CostKullLeib.applyGrad_"]], "applygrad_() (cost.costl1 method)": [[3, "Cost.CostL1.applyGrad_"]], "applygrad_() (cost.costl2 method)": [[3, "Cost.CostL2.applyGrad_"]], "applygrad_() (cost.costl2composition method)": [[3, "Cost.CostL2Composition.applyGrad_"]], "applygrad_() (cost.costlinear method)": [[3, "Cost.CostLinear.applyGrad_"]], "applygrad_() (cost.costrobustpenalization method)": [[3, "Cost.CostRobustPenalization.applyGrad_"]], "applyprox_() (cost.costconst method)": [[3, "Cost.CostConst.applyProx_"]], "applyprox_() (cost.costkullleib method)": [[3, "Cost.CostKullLeib.applyProx_"]], "applyprox_() (cost.costl1 method)": [[3, "Cost.CostL1.applyProx_"]], "applyprox_() (cost.costl2 method)": [[3, "Cost.CostL2.applyProx_"]], "applyprox_() (cost.costl2composition method)": [[3, "Cost.CostL2Composition.applyProx_"]], "applyprox_() (cost.costlinear method)": [[3, "Cost.CostLinear.applyProx_"]], "applyprox_() (cost.costmixnorm21 method)": [[3, "Cost.CostMixNorm21.applyProx_"]], "applyprox_() (cost.costmixnorm21nonneg method)": [[3, "Cost.CostMixNorm21NonNeg.applyProx_"]], "applyprox_() (cost.costmixnormschatt1 method)": [[3, "Cost.CostMixNormSchatt1.applyProx_"]], "applyprox_() (cost.costtv method)": [[3, "Cost.CostTV.applyProx_"]], "applyprox_() (cost.indicatorfunctions.costcomplexring method)": [[3, "Cost.IndicatorFunctions.CostComplexRing.applyProx_"]], "applyprox_() (cost.indicatorfunctions.costrectangle method)": [[3, "Cost.IndicatorFunctions.CostRectangle.applyProx_"]], "apply_() (cost.costconst method)": [[3, "Cost.CostConst.apply_"]], "apply_() (cost.costgoodroughness method)": [[3, "Cost.CostGoodRoughness.apply_"]], "apply_() (cost.costhyperbolic method)": [[3, "Cost.CostHyperBolic.apply_"]], "apply_() (cost.costkullleib method)": [[3, "Cost.CostKullLeib.apply_"]], "apply_() (cost.costl1 method)": [[3, "Cost.CostL1.apply_"]], "apply_() (cost.costl2 method)": [[3, "Cost.CostL2.apply_"]], "apply_() (cost.costl2composition method)": [[3, "Cost.CostL2Composition.apply_"]], "apply_() (cost.costlinear method)": [[3, "Cost.CostLinear.apply_"]], "apply_() (cost.costmixnorm21 method)": [[3, "Cost.CostMixNorm21.apply_"]], "apply_() (cost.costmixnorm21nonneg method)": [[3, "Cost.CostMixNorm21NonNeg.apply_"]], "apply_() (cost.costmixnormschatt1 method)": [[3, "Cost.CostMixNormSchatt1.apply_"]], "apply_() (cost.costrobustpenalization method)": [[3, "Cost.CostRobustPenalization.apply_"]], "apply_() (cost.indicatorfunctions.costcomplexring method)": [[3, "Cost.IndicatorFunctions.CostComplexRing.apply_"]], "apply_() (cost.indicatorfunctions.costrectangle method)": [[3, "Cost.IndicatorFunctions.CostRectangle.apply_"]], "makecomposition_() (cost.costl2 method)": [[3, "Cost.CostL2.makeComposition_"]], "makecomposition_() (cost.costl2composition method)": [[3, "Cost.CostL2Composition.makeComposition_"]], "makecomposition_() (cost.costmixnorm21 method)": [[3, "Cost.CostMixNorm21.makeComposition_"]], "setproxalgo() (cost.costtv method)": [[3, "Cost.CostTV.setProxAlgo"]], "linop (module)": [[10, "module-LinOp"]], "linop.selectorlinops (module)": [[10, "module-LinOp.SelectorLinOps"]], "linopbroadcast (class in linop)": [[10, "LinOp.LinOpBroadcast"]], "linopbroadcastmatrix (class in linop)": [[10, "LinOp.LinOpBroadcastMatrix"]], "linopconv (class in linop)": [[10, "LinOp.LinOpConv"]], "linopdct (class in linop)": [[10, "LinOp.LinOpDCT"]], "linopdiag (class in linop)": [[10, "LinOp.LinOpDiag"]], "linopdownsample (class in linop.selectorlinops)": [[10, "LinOp.SelectorLinOps.LinOpDownsample"]], "linopgrad (class in linop)": [[10, "LinOp.LinOpGrad"]], "linophess (class in linop)": [[10, "LinOp.LinOpHess"]], "linopmatrix (class in linop)": [[10, "LinOp.LinOpMatrix"]], "linopsdft (class in linop)": [[10, "LinOp.LinOpSDFT"]], "linopselector (class in linop.selectorlinops)": [[10, "LinOp.SelectorLinOps.LinOpSelector"]], "linopselectorpatch (class in linop.selectorlinops)": [[10, "LinOp.SelectorLinOps.LinOpSelectorPatch"]], "linopshape (class in linop)": [[10, "LinOp.LinOpShape"]], "linopsum (class in linop)": [[10, "LinOp.LinOpSum"]], "linopxray (class in linop)": [[10, "LinOp.LinOpXRay"]], "applyadjointinverse_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.applyAdjointInverse_"]], "applyadjointinverse_() (linop.linopdct method)": [[10, "LinOp.LinOpDCT.applyAdjointInverse_"]], "applyadjointinverse_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.applyAdjointInverse_"]], "applyadjointinverse_() (linop.linopsdft method)": [[10, "LinOp.LinOpSDFT.applyAdjointInverse_"]], "applyadjointinverse_() (linop.linopshape method)": [[10, "LinOp.LinOpShape.applyAdjointInverse_"]], "applyadjoint_() (linop.linopbroadcast method)": [[10, "LinOp.LinOpBroadcast.applyAdjoint_"]], "applyadjoint_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.applyAdjoint_"]], "applyadjoint_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.applyAdjoint_"]], "applyadjoint_() (linop.linopdct method)": [[10, "LinOp.LinOpDCT.applyAdjoint_"]], "applyadjoint_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.applyAdjoint_"]], "applyadjoint_() (linop.linopgrad method)": [[10, "LinOp.LinOpGrad.applyAdjoint_"]], "applyadjoint_() (linop.linophess method)": [[10, "LinOp.LinOpHess.applyAdjoint_"]], "applyadjoint_() (linop.linopmatrix method)": [[10, "LinOp.LinOpMatrix.applyAdjoint_"]], "applyadjoint_() (linop.linopsdft method)": [[10, "LinOp.LinOpSDFT.applyAdjoint_"]], "applyadjoint_() (linop.linopshape method)": [[10, "LinOp.LinOpShape.applyAdjoint_"]], "applyadjoint_() (linop.linopsum method)": [[10, "LinOp.LinOpSum.applyAdjoint_"]], "applyadjoint_() (linop.linopxray method)": [[10, "LinOp.LinOpXRay.applyAdjoint_"]], "applyadjoint_() (linop.selectorlinops.linopselector method)": [[10, "LinOp.SelectorLinOps.LinOpSelector.applyAdjoint_"]], "applyhht_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.applyHHt_"]], "applyhht_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.applyHHt_"]], "applyhht_() (linop.linopdct method)": [[10, "LinOp.LinOpDCT.applyHHt_"]], "applyhht_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.applyHHt_"]], "applyhht_() (linop.linopsdft method)": [[10, "LinOp.LinOpSDFT.applyHHt_"]], "applyhht_() (linop.linopshape method)": [[10, "LinOp.LinOpShape.applyHHt_"]], "applyhht_() (linop.linopsum method)": [[10, "LinOp.LinOpSum.applyHHt_"]], "applyhht_() (linop.selectorlinops.linopselector method)": [[10, "LinOp.SelectorLinOps.LinOpSelector.applyHHt_"]], "applyhth_() (linop.linopbroadcast method)": [[10, "LinOp.LinOpBroadcast.applyHtH_"]], "applyhth_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.applyHtH_"]], "applyhth_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.applyHtH_"]], "applyhth_() (linop.linopdct method)": [[10, "LinOp.LinOpDCT.applyHtH_"]], "applyhth_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.applyHtH_"]], "applyhth_() (linop.linopgrad method)": [[10, "LinOp.LinOpGrad.applyHtH_"]], "applyhth_() (linop.linopsdft method)": [[10, "LinOp.LinOpSDFT.applyHtH_"]], "applyhth_() (linop.linopshape method)": [[10, "LinOp.LinOpShape.applyHtH_"]], "applyhth_() (linop.linopxray method)": [[10, "LinOp.LinOpXRay.applyHtH_"]], "applyhth_() (linop.selectorlinops.linopselector method)": [[10, "LinOp.SelectorLinOps.LinOpSelector.applyHtH_"]], "applyinverse_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.applyInverse_"]], "applyinverse_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.applyInverse_"]], "applyinverse_() (linop.linopdct method)": [[10, "LinOp.LinOpDCT.applyInverse_"]], "applyinverse_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.applyInverse_"]], "applyinverse_() (linop.linopsdft method)": [[10, "LinOp.LinOpSDFT.applyInverse_"]], "applyinverse_() (linop.linopshape method)": [[10, "LinOp.LinOpShape.applyInverse_"]], "apply_() (linop.linopbroadcast method)": [[10, "LinOp.LinOpBroadcast.apply_"]], "apply_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.apply_"]], "apply_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.apply_"]], "apply_() (linop.linopdct method)": [[10, "LinOp.LinOpDCT.apply_"]], "apply_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.apply_"]], "apply_() (linop.linopgrad method)": [[10, "LinOp.LinOpGrad.apply_"]], "apply_() (linop.linophess method)": [[10, "LinOp.LinOpHess.apply_"]], "apply_() (linop.linopmatrix method)": [[10, "LinOp.LinOpMatrix.apply_"]], "apply_() (linop.linopsdft method)": [[10, "LinOp.LinOpSDFT.apply_"]], "apply_() (linop.linopshape method)": [[10, "LinOp.LinOpShape.apply_"]], "apply_() (linop.linopsum method)": [[10, "LinOp.LinOpSum.apply_"]], "apply_() (linop.linopxray method)": [[10, "LinOp.LinOpXRay.apply_"]], "apply_() (linop.selectorlinops.linopselector method)": [[10, "LinOp.SelectorLinOps.LinOpSelector.apply_"]], "makeadjoint_() (linop.linopbroadcast method)": [[10, "LinOp.LinOpBroadcast.makeAdjoint_"]], "makeadjoint_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.makeAdjoint_"]], "makeadjoint_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.makeAdjoint_"]], "makeadjoint_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.makeAdjoint_"]], "makeadjoint_() (linop.linopsum method)": [[10, "LinOp.LinOpSum.makeAdjoint_"]], "makecomposition_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.makeComposition_"]], "makecomposition_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.makeComposition_"]], "makecomposition_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.makeComposition_"]], "makecomposition_() (linop.linopsum method)": [[10, "LinOp.LinOpSum.makeComposition_"]], "makecomposition_() (linop.selectorlinops.linopdownsample method)": [[10, "LinOp.SelectorLinOps.LinOpDownsample.makeComposition_"]], "makehht_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.makeHHt_"]], "makehht_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.makeHHt_"]], "makehht_() (linop.linopdct method)": [[10, "LinOp.LinOpDCT.makeHHt_"]], "makehht_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.makeHHt_"]], "makehht_() (linop.linopsdft method)": [[10, "LinOp.LinOpSDFT.makeHHt_"]], "makehht_() (linop.linopshape method)": [[10, "LinOp.LinOpShape.makeHHt_"]], "makehht_() (linop.linopsum method)": [[10, "LinOp.LinOpSum.makeHHt_"]], "makehht_() (linop.selectorlinops.linopselector method)": [[10, "LinOp.SelectorLinOps.LinOpSelector.makeHHt_"]], "makehth_() (linop.linopbroadcast method)": [[10, "LinOp.LinOpBroadcast.makeHtH_"]], "makehth_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.makeHtH_"]], "makehth_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.makeHtH_"]], "makehth_() (linop.linopdct method)": [[10, "LinOp.LinOpDCT.makeHtH_"]], "makehth_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.makeHtH_"]], "makehth_() (linop.linopgrad method)": [[10, "LinOp.LinOpGrad.makeHtH_"]], "makehth_() (linop.linophess method)": [[10, "LinOp.LinOpHess.makeHtH_"]], "makehth_() (linop.linopsdft method)": [[10, "LinOp.LinOpSDFT.makeHtH_"]], "makehth_() (linop.linopshape method)": [[10, "LinOp.LinOpShape.makeHtH_"]], "makehth_() (linop.selectorlinops.linopselector method)": [[10, "LinOp.SelectorLinOps.LinOpSelector.makeHtH_"]], "makeinversion_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.makeInversion_"]], "makeinversion_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.makeInversion_"]], "makeinversion_() (linop.linopdct method)": [[10, "LinOp.LinOpDCT.makeInversion_"]], "makeinversion_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.makeInversion_"]], "makeinversion_() (linop.linopsdft method)": [[10, "LinOp.LinOpSDFT.makeInversion_"]], "mpower_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.mpower_"]], "plus_() (linop.linopbroadcastmatrix method)": [[10, "LinOp.LinOpBroadcastMatrix.plus_"]], "plus_() (linop.linopconv method)": [[10, "LinOp.LinOpConv.plus_"]], "plus_() (linop.linopdiag method)": [[10, "LinOp.LinOpDiag.plus_"]], "nonlinop (module)": [[12, "module-NonLinOp"]], "nonlinop.elementwiseop (module)": [[12, "module-NonLinOp.ElementWiseOp"]], "opewabs (class in nonlinop.elementwiseop)": [[12, "NonLinOp.ElementWiseOp.OpEWAbs"]], "opewinverse (class in nonlinop.elementwiseop)": [[12, "NonLinOp.ElementWiseOp.OpEWInverse"]], "opewsqrt (class in nonlinop.elementwiseop)": [[12, "NonLinOp.ElementWiseOp.OpEWSqrt"]], "opewsquaredmagnitude (class in nonlinop.elementwiseop)": [[12, "NonLinOp.ElementWiseOp.OpEWSquaredMagnitude"]], "opewfunc (class in nonlinop.elementwiseop)": [[12, "NonLinOp.ElementWiseOp.OpEWfunc"]], "applyinverse_() (nonlinop.elementwiseop.opewfunc method)": [[12, "NonLinOp.ElementWiseOp.OpEWfunc.applyInverse_"]], "applyjacobiant_() (nonlinop.elementwiseop.opewabs method)": [[12, "NonLinOp.ElementWiseOp.OpEWAbs.applyJacobianT_"]], "applyjacobiant_() (nonlinop.elementwiseop.opewinverse method)": [[12, "NonLinOp.ElementWiseOp.OpEWInverse.applyJacobianT_"]], "applyjacobiant_() (nonlinop.elementwiseop.opewsqrt method)": [[12, "NonLinOp.ElementWiseOp.OpEWSqrt.applyJacobianT_"]], "applyjacobiant_() (nonlinop.elementwiseop.opewsquaredmagnitude method)": [[12, "NonLinOp.ElementWiseOp.OpEWSquaredMagnitude.applyJacobianT_"]], "applyjacobiant_() (nonlinop.elementwiseop.opewfunc method)": [[12, "NonLinOp.ElementWiseOp.OpEWfunc.applyJacobianT_"]], "apply_() (nonlinop.elementwiseop.opewabs method)": [[12, "NonLinOp.ElementWiseOp.OpEWAbs.apply_"]], "apply_() (nonlinop.elementwiseop.opewinverse method)": [[12, "NonLinOp.ElementWiseOp.OpEWInverse.apply_"]], "apply_() (nonlinop.elementwiseop.opewsqrt method)": [[12, "NonLinOp.ElementWiseOp.OpEWSqrt.apply_"]], "apply_() (nonlinop.elementwiseop.opewsquaredmagnitude method)": [[12, "NonLinOp.ElementWiseOp.OpEWSquaredMagnitude.apply_"]], "apply_() (nonlinop.elementwiseop.opewfunc method)": [[12, "NonLinOp.ElementWiseOp.OpEWfunc.apply_"]], "opti (module)": [[13, "module-Opti"]], "opti.outputopti (module)": [[13, "module-Opti.OutputOpti"]], "opti.testcvg (module)": [[13, "module-Opti.TestCvg"]], "optiadmm (class in opti)": [[13, "Opti.OptiADMM"]], "optichambpock (class in opti)": [[13, "Opti.OptiChambPock"]], "opticonjgrad (class in opti)": [[13, "Opti.OptiConjGrad"]], "optidouglasrachford (class in opti)": [[13, "Opti.OptiDouglasRachford"]], "optifbs (class in opti)": [[13, "Opti.OptiFBS"]], "optifgp (class in opti)": [[13, "Opti.OptiFGP"]], "optigraddsct (class in opti)": [[13, "Opti.OptiGradDsct"]], "optiprimaldualcondat (class in opti)": [[13, "Opti.OptiPrimalDualCondat"]], "optirichlucy (class in opti)": [[13, "Opti.OptiRichLucy"]], "optivmlmb (class in opti)": [[13, "Opti.OptiVMLMB"]], "outputopti (class in opti.outputopti)": [[13, "Opti.OutputOpti.OutputOpti"]], "outputopticonjgrad (class in opti.outputopti)": [[13, "Opti.OutputOpti.OutputOptiConjGrad"]], "testcvg (class in opti.testcvg)": [[13, "Opti.TestCvg.TestCvg"]], "testcvgadmm (class in opti.testcvg)": [[13, "Opti.TestCvg.TestCvgADMM"]], "testcvgcombine (class in opti.testcvg)": [[13, "Opti.TestCvg.TestCvgCombine"]], "testcvgcostabsolute (class in opti.testcvg)": [[13, "Opti.TestCvg.TestCvgCostAbsolute"]], "testcvgcostrelative (class in opti.testcvg)": [[13, "Opti.TestCvg.TestCvgCostRelative"]], "testcvgmaxsnr (class in opti.testcvg)": [[13, "Opti.TestCvg.TestCvgMaxSnr"]], "testcvgsteprelative (class in opti.testcvg)": [[13, "Opti.TestCvg.TestCvgStepRelative"]], "computecost() (opti.outputopti.outputopti method)": [[13, "Opti.OutputOpti.OutputOpti.computeCost"]], "computecost() (opti.outputopti.outputopticonjgrad method)": [[13, "Opti.OutputOpti.OutputOptiConjGrad.computeCost"]], "doiteration() (opti.optiadmm method)": [[13, "Opti.OptiADMM.doIteration"]], "doiteration() (opti.optichambpock method)": [[13, "Opti.OptiChambPock.doIteration"]], "doiteration() (opti.opticonjgrad method)": [[13, "Opti.OptiConjGrad.doIteration"]], "doiteration() (opti.optidouglasrachford method)": [[13, "Opti.OptiDouglasRachford.doIteration"]], "doiteration() (opti.optifbs method)": [[13, "Opti.OptiFBS.doIteration"]], "doiteration() (opti.optifgp method)": [[13, "Opti.OptiFGP.doIteration"]], "doiteration() (opti.optigraddsct method)": [[13, "Opti.OptiGradDsct.doIteration"]], "doiteration() (opti.optiprimaldualcondat method)": [[13, "Opti.OptiPrimalDualCondat.doIteration"]], "doiteration() (opti.optirichlucy method)": [[13, "Opti.OptiRichLucy.doIteration"]], "doiteration() (opti.optivmlmb method)": [[13, "Opti.OptiVMLMB.doIteration"]], "init() (opti.outputopti.outputopti method)": [[13, "Opti.OutputOpti.OutputOpti.init"]], "initialize() (opti.optiadmm method)": [[13, "Opti.OptiADMM.initialize"]], "initialize() (opti.optichambpock method)": [[13, "Opti.OptiChambPock.initialize"]], "initialize() (opti.opticonjgrad method)": [[13, "Opti.OptiConjGrad.initialize"]], "initialize() (opti.optidouglasrachford method)": [[13, "Opti.OptiDouglasRachford.initialize"]], "initialize() (opti.optifbs method)": [[13, "Opti.OptiFBS.initialize"]], "initialize() (opti.optifgp method)": [[13, "Opti.OptiFGP.initialize"]], "initialize() (opti.optigraddsct method)": [[13, "Opti.OptiGradDsct.initialize"]], "initialize() (opti.optiprimaldualcondat method)": [[13, "Opti.OptiPrimalDualCondat.initialize"]], "initialize() (opti.optirichlucy method)": [[13, "Opti.OptiRichLucy.initialize"]], "initialize() (opti.optivmlmb method)": [[13, "Opti.OptiVMLMB.initialize"]], "setbounds() (opti.optifgp method)": [[13, "Opti.OptiFGP.setBounds"]], "setlambda() (opti.optifgp method)": [[13, "Opti.OptiFGP.setLambda"]], "testconvergence() (opti.testcvg.testcvg method)": [[13, "Opti.TestCvg.TestCvg.testConvergence"]], "testconvergence() (opti.testcvg.testcvgadmm method)": [[13, "Opti.TestCvg.TestCvgADMM.testConvergence"]], "testconvergence() (opti.testcvg.testcvgcombine method)": [[13, "Opti.TestCvg.TestCvgCombine.testConvergence"]], "testconvergence() (opti.testcvg.testcvgcostabsolute method)": [[13, "Opti.TestCvg.TestCvgCostAbsolute.testConvergence"]], "testconvergence() (opti.testcvg.testcvgcostrelative method)": [[13, "Opti.TestCvg.TestCvgCostRelative.testConvergence"]], "testconvergence() (opti.testcvg.testcvgmaxsnr method)": [[13, "Opti.TestCvg.TestCvgMaxSnr.testConvergence"]], "testconvergence() (opti.testcvg.testcvgsteprelative method)": [[13, "Opti.TestCvg.TestCvgStepRelative.testConvergence"]], "update() (opti.outputopti.outputopti method)": [[13, "Opti.OutputOpti.OutputOpti.update"]]}})